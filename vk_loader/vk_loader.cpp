/* This header is autogenerated */
	
#include "vk_loader.h"

#ifndef _WIN32
#include <dlfcn.h>
#else
#include <Windows.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

PFN_vkCreateInstance vkLoader_vkCreateInstance;
PFN_vkDestroyInstance vkLoader_vkDestroyInstance;
PFN_vkEnumeratePhysicalDevices vkLoader_vkEnumeratePhysicalDevices;
PFN_vkGetDeviceProcAddr vkLoader_vkGetDeviceProcAddr;
PFN_vkGetInstanceProcAddr vkLoader_vkGetInstanceProcAddr;
PFN_vkGetPhysicalDeviceProperties vkLoader_vkGetPhysicalDeviceProperties;
PFN_vkGetPhysicalDeviceQueueFamilyProperties vkLoader_vkGetPhysicalDeviceQueueFamilyProperties;
PFN_vkGetPhysicalDeviceMemoryProperties vkLoader_vkGetPhysicalDeviceMemoryProperties;
PFN_vkGetPhysicalDeviceFeatures vkLoader_vkGetPhysicalDeviceFeatures;
PFN_vkGetPhysicalDeviceFormatProperties vkLoader_vkGetPhysicalDeviceFormatProperties;
PFN_vkGetPhysicalDeviceImageFormatProperties vkLoader_vkGetPhysicalDeviceImageFormatProperties;
PFN_vkCreateDevice vkLoader_vkCreateDevice;
PFN_vkDestroyDevice vkLoader_vkDestroyDevice;
PFN_vkEnumerateInstanceLayerProperties vkLoader_vkEnumerateInstanceLayerProperties;
PFN_vkEnumerateInstanceExtensionProperties vkLoader_vkEnumerateInstanceExtensionProperties;
PFN_vkEnumerateDeviceLayerProperties vkLoader_vkEnumerateDeviceLayerProperties;
PFN_vkEnumerateDeviceExtensionProperties vkLoader_vkEnumerateDeviceExtensionProperties;
PFN_vkGetDeviceQueue vkLoader_vkGetDeviceQueue;
PFN_vkQueueSubmit vkLoader_vkQueueSubmit;
PFN_vkQueueWaitIdle vkLoader_vkQueueWaitIdle;
PFN_vkDeviceWaitIdle vkLoader_vkDeviceWaitIdle;
PFN_vkAllocateMemory vkLoader_vkAllocateMemory;
PFN_vkFreeMemory vkLoader_vkFreeMemory;
PFN_vkMapMemory vkLoader_vkMapMemory;
PFN_vkUnmapMemory vkLoader_vkUnmapMemory;
PFN_vkFlushMappedMemoryRanges vkLoader_vkFlushMappedMemoryRanges;
PFN_vkInvalidateMappedMemoryRanges vkLoader_vkInvalidateMappedMemoryRanges;
PFN_vkGetDeviceMemoryCommitment vkLoader_vkGetDeviceMemoryCommitment;
PFN_vkGetBufferMemoryRequirements vkLoader_vkGetBufferMemoryRequirements;
PFN_vkBindBufferMemory vkLoader_vkBindBufferMemory;
PFN_vkGetImageMemoryRequirements vkLoader_vkGetImageMemoryRequirements;
PFN_vkBindImageMemory vkLoader_vkBindImageMemory;
PFN_vkGetImageSparseMemoryRequirements vkLoader_vkGetImageSparseMemoryRequirements;
PFN_vkGetPhysicalDeviceSparseImageFormatProperties vkLoader_vkGetPhysicalDeviceSparseImageFormatProperties;
PFN_vkQueueBindSparse vkLoader_vkQueueBindSparse;
PFN_vkCreateFence vkLoader_vkCreateFence;
PFN_vkDestroyFence vkLoader_vkDestroyFence;
PFN_vkResetFences vkLoader_vkResetFences;
PFN_vkGetFenceStatus vkLoader_vkGetFenceStatus;
PFN_vkWaitForFences vkLoader_vkWaitForFences;
PFN_vkCreateSemaphore vkLoader_vkCreateSemaphore;
PFN_vkDestroySemaphore vkLoader_vkDestroySemaphore;
PFN_vkCreateEvent vkLoader_vkCreateEvent;
PFN_vkDestroyEvent vkLoader_vkDestroyEvent;
PFN_vkGetEventStatus vkLoader_vkGetEventStatus;
PFN_vkSetEvent vkLoader_vkSetEvent;
PFN_vkResetEvent vkLoader_vkResetEvent;
PFN_vkCreateQueryPool vkLoader_vkCreateQueryPool;
PFN_vkDestroyQueryPool vkLoader_vkDestroyQueryPool;
PFN_vkGetQueryPoolResults vkLoader_vkGetQueryPoolResults;
PFN_vkCreateBuffer vkLoader_vkCreateBuffer;
PFN_vkDestroyBuffer vkLoader_vkDestroyBuffer;
PFN_vkCreateBufferView vkLoader_vkCreateBufferView;
PFN_vkDestroyBufferView vkLoader_vkDestroyBufferView;
PFN_vkCreateImage vkLoader_vkCreateImage;
PFN_vkDestroyImage vkLoader_vkDestroyImage;
PFN_vkGetImageSubresourceLayout vkLoader_vkGetImageSubresourceLayout;
PFN_vkCreateImageView vkLoader_vkCreateImageView;
PFN_vkDestroyImageView vkLoader_vkDestroyImageView;
PFN_vkCreateShaderModule vkLoader_vkCreateShaderModule;
PFN_vkDestroyShaderModule vkLoader_vkDestroyShaderModule;
PFN_vkCreatePipelineCache vkLoader_vkCreatePipelineCache;
PFN_vkDestroyPipelineCache vkLoader_vkDestroyPipelineCache;
PFN_vkGetPipelineCacheData vkLoader_vkGetPipelineCacheData;
PFN_vkMergePipelineCaches vkLoader_vkMergePipelineCaches;
PFN_vkCreateGraphicsPipelines vkLoader_vkCreateGraphicsPipelines;
PFN_vkCreateComputePipelines vkLoader_vkCreateComputePipelines;
PFN_vkDestroyPipeline vkLoader_vkDestroyPipeline;
PFN_vkCreatePipelineLayout vkLoader_vkCreatePipelineLayout;
PFN_vkDestroyPipelineLayout vkLoader_vkDestroyPipelineLayout;
PFN_vkCreateSampler vkLoader_vkCreateSampler;
PFN_vkDestroySampler vkLoader_vkDestroySampler;
PFN_vkCreateDescriptorSetLayout vkLoader_vkCreateDescriptorSetLayout;
PFN_vkDestroyDescriptorSetLayout vkLoader_vkDestroyDescriptorSetLayout;
PFN_vkCreateDescriptorPool vkLoader_vkCreateDescriptorPool;
PFN_vkDestroyDescriptorPool vkLoader_vkDestroyDescriptorPool;
PFN_vkResetDescriptorPool vkLoader_vkResetDescriptorPool;
PFN_vkAllocateDescriptorSets vkLoader_vkAllocateDescriptorSets;
PFN_vkFreeDescriptorSets vkLoader_vkFreeDescriptorSets;
PFN_vkUpdateDescriptorSets vkLoader_vkUpdateDescriptorSets;
PFN_vkCreateFramebuffer vkLoader_vkCreateFramebuffer;
PFN_vkDestroyFramebuffer vkLoader_vkDestroyFramebuffer;
PFN_vkCreateRenderPass vkLoader_vkCreateRenderPass;
PFN_vkDestroyRenderPass vkLoader_vkDestroyRenderPass;
PFN_vkGetRenderAreaGranularity vkLoader_vkGetRenderAreaGranularity;
PFN_vkCreateCommandPool vkLoader_vkCreateCommandPool;
PFN_vkDestroyCommandPool vkLoader_vkDestroyCommandPool;
PFN_vkResetCommandPool vkLoader_vkResetCommandPool;
PFN_vkAllocateCommandBuffers vkLoader_vkAllocateCommandBuffers;
PFN_vkFreeCommandBuffers vkLoader_vkFreeCommandBuffers;
PFN_vkBeginCommandBuffer vkLoader_vkBeginCommandBuffer;
PFN_vkEndCommandBuffer vkLoader_vkEndCommandBuffer;
PFN_vkResetCommandBuffer vkLoader_vkResetCommandBuffer;
PFN_vkCmdBindPipeline vkLoader_vkCmdBindPipeline;
PFN_vkCmdSetViewport vkLoader_vkCmdSetViewport;
PFN_vkCmdSetScissor vkLoader_vkCmdSetScissor;
PFN_vkCmdSetLineWidth vkLoader_vkCmdSetLineWidth;
PFN_vkCmdSetDepthBias vkLoader_vkCmdSetDepthBias;
PFN_vkCmdSetBlendConstants vkLoader_vkCmdSetBlendConstants;
PFN_vkCmdSetDepthBounds vkLoader_vkCmdSetDepthBounds;
PFN_vkCmdSetStencilCompareMask vkLoader_vkCmdSetStencilCompareMask;
PFN_vkCmdSetStencilWriteMask vkLoader_vkCmdSetStencilWriteMask;
PFN_vkCmdSetStencilReference vkLoader_vkCmdSetStencilReference;
PFN_vkCmdBindDescriptorSets vkLoader_vkCmdBindDescriptorSets;
PFN_vkCmdBindIndexBuffer vkLoader_vkCmdBindIndexBuffer;
PFN_vkCmdBindVertexBuffers vkLoader_vkCmdBindVertexBuffers;
PFN_vkCmdDraw vkLoader_vkCmdDraw;
PFN_vkCmdDrawIndexed vkLoader_vkCmdDrawIndexed;
PFN_vkCmdDrawIndirect vkLoader_vkCmdDrawIndirect;
PFN_vkCmdDrawIndexedIndirect vkLoader_vkCmdDrawIndexedIndirect;
PFN_vkCmdDispatch vkLoader_vkCmdDispatch;
PFN_vkCmdDispatchIndirect vkLoader_vkCmdDispatchIndirect;
PFN_vkCmdCopyBuffer vkLoader_vkCmdCopyBuffer;
PFN_vkCmdCopyImage vkLoader_vkCmdCopyImage;
PFN_vkCmdBlitImage vkLoader_vkCmdBlitImage;
PFN_vkCmdCopyBufferToImage vkLoader_vkCmdCopyBufferToImage;
PFN_vkCmdCopyImageToBuffer vkLoader_vkCmdCopyImageToBuffer;
PFN_vkCmdUpdateBuffer vkLoader_vkCmdUpdateBuffer;
PFN_vkCmdFillBuffer vkLoader_vkCmdFillBuffer;
PFN_vkCmdClearColorImage vkLoader_vkCmdClearColorImage;
PFN_vkCmdClearDepthStencilImage vkLoader_vkCmdClearDepthStencilImage;
PFN_vkCmdClearAttachments vkLoader_vkCmdClearAttachments;
PFN_vkCmdResolveImage vkLoader_vkCmdResolveImage;
PFN_vkCmdSetEvent vkLoader_vkCmdSetEvent;
PFN_vkCmdResetEvent vkLoader_vkCmdResetEvent;
PFN_vkCmdWaitEvents vkLoader_vkCmdWaitEvents;
PFN_vkCmdPipelineBarrier vkLoader_vkCmdPipelineBarrier;
PFN_vkCmdBeginQuery vkLoader_vkCmdBeginQuery;
PFN_vkCmdEndQuery vkLoader_vkCmdEndQuery;
PFN_vkCmdResetQueryPool vkLoader_vkCmdResetQueryPool;
PFN_vkCmdWriteTimestamp vkLoader_vkCmdWriteTimestamp;
PFN_vkCmdCopyQueryPoolResults vkLoader_vkCmdCopyQueryPoolResults;
PFN_vkCmdPushConstants vkLoader_vkCmdPushConstants;
PFN_vkCmdBeginRenderPass vkLoader_vkCmdBeginRenderPass;
PFN_vkCmdNextSubpass vkLoader_vkCmdNextSubpass;
PFN_vkCmdEndRenderPass vkLoader_vkCmdEndRenderPass;
PFN_vkCmdExecuteCommands vkLoader_vkCmdExecuteCommands;
#ifdef VK_KHR_surface
PFN_vkDestroySurfaceKHR vkLoader_vkDestroySurfaceKHR;
PFN_vkGetPhysicalDeviceSurfaceSupportKHR vkLoader_vkGetPhysicalDeviceSurfaceSupportKHR;
PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR vkLoader_vkGetPhysicalDeviceSurfaceCapabilitiesKHR;
PFN_vkGetPhysicalDeviceSurfaceFormatsKHR vkLoader_vkGetPhysicalDeviceSurfaceFormatsKHR;
PFN_vkGetPhysicalDeviceSurfacePresentModesKHR vkLoader_vkGetPhysicalDeviceSurfacePresentModesKHR;
#endif
#ifdef VK_KHR_swapchain
PFN_vkCreateSwapchainKHR vkLoader_vkCreateSwapchainKHR;
PFN_vkDestroySwapchainKHR vkLoader_vkDestroySwapchainKHR;
PFN_vkGetSwapchainImagesKHR vkLoader_vkGetSwapchainImagesKHR;
PFN_vkAcquireNextImageKHR vkLoader_vkAcquireNextImageKHR;
PFN_vkQueuePresentKHR vkLoader_vkQueuePresentKHR;
#endif
#ifdef VK_KHR_display
PFN_vkGetPhysicalDeviceDisplayPropertiesKHR vkLoader_vkGetPhysicalDeviceDisplayPropertiesKHR;
PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR vkLoader_vkGetPhysicalDeviceDisplayPlanePropertiesKHR;
PFN_vkGetDisplayPlaneSupportedDisplaysKHR vkLoader_vkGetDisplayPlaneSupportedDisplaysKHR;
PFN_vkGetDisplayModePropertiesKHR vkLoader_vkGetDisplayModePropertiesKHR;
PFN_vkCreateDisplayModeKHR vkLoader_vkCreateDisplayModeKHR;
PFN_vkGetDisplayPlaneCapabilitiesKHR vkLoader_vkGetDisplayPlaneCapabilitiesKHR;
PFN_vkCreateDisplayPlaneSurfaceKHR vkLoader_vkCreateDisplayPlaneSurfaceKHR;
#endif
#ifdef VK_KHR_display_swapchain
PFN_vkCreateSharedSwapchainsKHR vkLoader_vkCreateSharedSwapchainsKHR;
#endif
#ifdef VK_KHR_xlib_surface
PFN_vkCreateXlibSurfaceKHR vkLoader_vkCreateXlibSurfaceKHR;
PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR vkLoader_vkGetPhysicalDeviceXlibPresentationSupportKHR;
#endif
#ifdef VK_KHR_xcb_surface
PFN_vkCreateXcbSurfaceKHR vkLoader_vkCreateXcbSurfaceKHR;
PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR vkLoader_vkGetPhysicalDeviceXcbPresentationSupportKHR;
#endif
#ifdef VK_KHR_wayland_surface
PFN_vkCreateWaylandSurfaceKHR vkLoader_vkCreateWaylandSurfaceKHR;
PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR vkLoader_vkGetPhysicalDeviceWaylandPresentationSupportKHR;
#endif
#ifdef VK_KHR_mir_surface
PFN_vkCreateMirSurfaceKHR vkLoader_vkCreateMirSurfaceKHR;
PFN_vkGetPhysicalDeviceMirPresentationSupportKHR vkLoader_vkGetPhysicalDeviceMirPresentationSupportKHR;
#endif
#ifdef VK_KHR_android_surface
PFN_vkCreateAndroidSurfaceKHR vkLoader_vkCreateAndroidSurfaceKHR;
#endif
#ifdef VK_KHR_win32_surface
PFN_vkCreateWin32SurfaceKHR vkLoader_vkCreateWin32SurfaceKHR;
PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR vkLoader_vkGetPhysicalDeviceWin32PresentationSupportKHR;
#endif
#ifdef VK_ANDROID_native_buffer
PFN_vkGetSwapchainGrallocUsageANDROID vkLoader_vkGetSwapchainGrallocUsageANDROID;
PFN_vkAcquireImageANDROID vkLoader_vkAcquireImageANDROID;
PFN_vkQueueSignalReleaseImageANDROID vkLoader_vkQueueSignalReleaseImageANDROID;
#endif
#ifdef VK_EXT_debug_report
PFN_vkCreateDebugReportCallbackEXT vkLoader_vkCreateDebugReportCallbackEXT;
PFN_vkDestroyDebugReportCallbackEXT vkLoader_vkDestroyDebugReportCallbackEXT;
PFN_vkDebugReportMessageEXT vkLoader_vkDebugReportMessageEXT;
#endif
#ifdef VK_EXT_debug_marker
PFN_vkDebugMarkerSetObjectTagEXT vkLoader_vkDebugMarkerSetObjectTagEXT;
PFN_vkDebugMarkerSetObjectNameEXT vkLoader_vkDebugMarkerSetObjectNameEXT;
PFN_vkCmdDebugMarkerBeginEXT vkLoader_vkCmdDebugMarkerBeginEXT;
PFN_vkCmdDebugMarkerEndEXT vkLoader_vkCmdDebugMarkerEndEXT;
PFN_vkCmdDebugMarkerInsertEXT vkLoader_vkCmdDebugMarkerInsertEXT;
#endif
#ifdef VK_AMD_draw_indirect_count
PFN_vkCmdDrawIndirectCountAMD vkLoader_vkCmdDrawIndirectCountAMD;
PFN_vkCmdDrawIndexedIndirectCountAMD vkLoader_vkCmdDrawIndexedIndirectCountAMD;
#endif
#ifdef VK_AMD_shader_info
PFN_vkGetShaderInfoAMD vkLoader_vkGetShaderInfoAMD;
#endif
#ifdef VK_NV_external_memory_capabilities
PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV vkLoader_vkGetPhysicalDeviceExternalImageFormatPropertiesNV;
#endif
#ifdef VK_NV_external_memory_win32
PFN_vkGetMemoryWin32HandleNV vkLoader_vkGetMemoryWin32HandleNV;
#endif
#ifdef VK_KHR_get_physical_device_properties2
PFN_vkGetPhysicalDeviceFeatures2KHR vkLoader_vkGetPhysicalDeviceFeatures2KHR;
PFN_vkGetPhysicalDeviceProperties2KHR vkLoader_vkGetPhysicalDeviceProperties2KHR;
PFN_vkGetPhysicalDeviceFormatProperties2KHR vkLoader_vkGetPhysicalDeviceFormatProperties2KHR;
PFN_vkGetPhysicalDeviceImageFormatProperties2KHR vkLoader_vkGetPhysicalDeviceImageFormatProperties2KHR;
PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR vkLoader_vkGetPhysicalDeviceQueueFamilyProperties2KHR;
PFN_vkGetPhysicalDeviceMemoryProperties2KHR vkLoader_vkGetPhysicalDeviceMemoryProperties2KHR;
PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR vkLoader_vkGetPhysicalDeviceSparseImageFormatProperties2KHR;
#endif
#ifdef VK_KHX_device_group
PFN_vkGetDeviceGroupPeerMemoryFeaturesKHX vkLoader_vkGetDeviceGroupPeerMemoryFeaturesKHX;
PFN_vkCmdSetDeviceMaskKHX vkLoader_vkCmdSetDeviceMaskKHX;
PFN_vkCmdDispatchBaseKHX vkLoader_vkCmdDispatchBaseKHX;
PFN_vkGetDeviceGroupPresentCapabilitiesKHX vkLoader_vkGetDeviceGroupPresentCapabilitiesKHX;
PFN_vkGetDeviceGroupSurfacePresentModesKHX vkLoader_vkGetDeviceGroupSurfacePresentModesKHX;
PFN_vkGetPhysicalDevicePresentRectanglesKHX vkLoader_vkGetPhysicalDevicePresentRectanglesKHX;
PFN_vkAcquireNextImage2KHX vkLoader_vkAcquireNextImage2KHX;
#endif
#ifdef VK_NN_vi_surface
PFN_vkCreateViSurfaceNN vkLoader_vkCreateViSurfaceNN;
#endif
#ifdef VK_KHR_maintenance1
PFN_vkTrimCommandPoolKHR vkLoader_vkTrimCommandPoolKHR;
#endif
#ifdef VK_KHX_device_group_creation
PFN_vkEnumeratePhysicalDeviceGroupsKHX vkLoader_vkEnumeratePhysicalDeviceGroupsKHX;
#endif
#ifdef VK_KHR_external_memory_capabilities
PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR vkLoader_vkGetPhysicalDeviceExternalBufferPropertiesKHR;
#endif
#ifdef VK_KHR_external_memory_win32
PFN_vkGetMemoryWin32HandleKHR vkLoader_vkGetMemoryWin32HandleKHR;
PFN_vkGetMemoryWin32HandlePropertiesKHR vkLoader_vkGetMemoryWin32HandlePropertiesKHR;
#endif
#ifdef VK_KHR_external_memory_fd
PFN_vkGetMemoryFdKHR vkLoader_vkGetMemoryFdKHR;
PFN_vkGetMemoryFdPropertiesKHR vkLoader_vkGetMemoryFdPropertiesKHR;
#endif
#ifdef VK_KHR_external_semaphore_capabilities
PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR vkLoader_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR;
#endif
#ifdef VK_KHR_external_semaphore_win32
PFN_vkImportSemaphoreWin32HandleKHR vkLoader_vkImportSemaphoreWin32HandleKHR;
PFN_vkGetSemaphoreWin32HandleKHR vkLoader_vkGetSemaphoreWin32HandleKHR;
#endif
#ifdef VK_KHR_external_semaphore_fd
PFN_vkImportSemaphoreFdKHR vkLoader_vkImportSemaphoreFdKHR;
PFN_vkGetSemaphoreFdKHR vkLoader_vkGetSemaphoreFdKHR;
#endif
#ifdef VK_KHR_push_descriptor
PFN_vkCmdPushDescriptorSetKHR vkLoader_vkCmdPushDescriptorSetKHR;
#endif
#ifdef VK_KHR_descriptor_update_template
PFN_vkCreateDescriptorUpdateTemplateKHR vkLoader_vkCreateDescriptorUpdateTemplateKHR;
PFN_vkDestroyDescriptorUpdateTemplateKHR vkLoader_vkDestroyDescriptorUpdateTemplateKHR;
PFN_vkUpdateDescriptorSetWithTemplateKHR vkLoader_vkUpdateDescriptorSetWithTemplateKHR;
PFN_vkCmdPushDescriptorSetWithTemplateKHR vkLoader_vkCmdPushDescriptorSetWithTemplateKHR;
#endif
#ifdef VK_NVX_device_generated_commands
PFN_vkCmdProcessCommandsNVX vkLoader_vkCmdProcessCommandsNVX;
PFN_vkCmdReserveSpaceForCommandsNVX vkLoader_vkCmdReserveSpaceForCommandsNVX;
PFN_vkCreateIndirectCommandsLayoutNVX vkLoader_vkCreateIndirectCommandsLayoutNVX;
PFN_vkDestroyIndirectCommandsLayoutNVX vkLoader_vkDestroyIndirectCommandsLayoutNVX;
PFN_vkCreateObjectTableNVX vkLoader_vkCreateObjectTableNVX;
PFN_vkDestroyObjectTableNVX vkLoader_vkDestroyObjectTableNVX;
PFN_vkRegisterObjectsNVX vkLoader_vkRegisterObjectsNVX;
PFN_vkUnregisterObjectsNVX vkLoader_vkUnregisterObjectsNVX;
PFN_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX vkLoader_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX;
#endif
#ifdef VK_NV_clip_space_w_scaling
PFN_vkCmdSetViewportWScalingNV vkLoader_vkCmdSetViewportWScalingNV;
#endif
#ifdef VK_EXT_direct_mode_display
PFN_vkReleaseDisplayEXT vkLoader_vkReleaseDisplayEXT;
#endif
#ifdef VK_EXT_acquire_xlib_display
PFN_vkAcquireXlibDisplayEXT vkLoader_vkAcquireXlibDisplayEXT;
PFN_vkGetRandROutputDisplayEXT vkLoader_vkGetRandROutputDisplayEXT;
#endif
#ifdef VK_EXT_display_surface_counter
PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT vkLoader_vkGetPhysicalDeviceSurfaceCapabilities2EXT;
#endif
#ifdef VK_EXT_display_control
PFN_vkDisplayPowerControlEXT vkLoader_vkDisplayPowerControlEXT;
PFN_vkRegisterDeviceEventEXT vkLoader_vkRegisterDeviceEventEXT;
PFN_vkRegisterDisplayEventEXT vkLoader_vkRegisterDisplayEventEXT;
PFN_vkGetSwapchainCounterEXT vkLoader_vkGetSwapchainCounterEXT;
#endif
#ifdef VK_GOOGLE_display_timing
PFN_vkGetRefreshCycleDurationGOOGLE vkLoader_vkGetRefreshCycleDurationGOOGLE;
PFN_vkGetPastPresentationTimingGOOGLE vkLoader_vkGetPastPresentationTimingGOOGLE;
#endif
#ifdef VK_EXT_discard_rectangles
PFN_vkCmdSetDiscardRectangleEXT vkLoader_vkCmdSetDiscardRectangleEXT;
#endif
#ifdef VK_EXT_hdr_metadata
PFN_vkSetHdrMetadataEXT vkLoader_vkSetHdrMetadataEXT;
#endif
#ifdef VK_KHR_shared_presentable_image
PFN_vkGetSwapchainStatusKHR vkLoader_vkGetSwapchainStatusKHR;
#endif
#ifdef VK_KHR_external_fence_capabilities
PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR vkLoader_vkGetPhysicalDeviceExternalFencePropertiesKHR;
#endif
#ifdef VK_KHR_external_fence_win32
PFN_vkImportFenceWin32HandleKHR vkLoader_vkImportFenceWin32HandleKHR;
PFN_vkGetFenceWin32HandleKHR vkLoader_vkGetFenceWin32HandleKHR;
#endif
#ifdef VK_KHR_external_fence_fd
PFN_vkImportFenceFdKHR vkLoader_vkImportFenceFdKHR;
PFN_vkGetFenceFdKHR vkLoader_vkGetFenceFdKHR;
#endif
#ifdef VK_KHR_get_surface_capabilities2
PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR vkLoader_vkGetPhysicalDeviceSurfaceCapabilities2KHR;
PFN_vkGetPhysicalDeviceSurfaceFormats2KHR vkLoader_vkGetPhysicalDeviceSurfaceFormats2KHR;
#endif
#ifdef VK_MVK_ios_surface
PFN_vkCreateIOSSurfaceMVK vkLoader_vkCreateIOSSurfaceMVK;
#endif
#ifdef VK_MVK_macos_surface
PFN_vkCreateMacOSSurfaceMVK vkLoader_vkCreateMacOSSurfaceMVK;
#endif
#ifdef VK_EXT_sample_locations
PFN_vkCmdSetSampleLocationsEXT vkLoader_vkCmdSetSampleLocationsEXT;
PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT vkLoader_vkGetPhysicalDeviceMultisamplePropertiesEXT;
#endif
#ifdef VK_KHR_get_memory_requirements2
PFN_vkGetImageMemoryRequirements2KHR vkLoader_vkGetImageMemoryRequirements2KHR;
PFN_vkGetBufferMemoryRequirements2KHR vkLoader_vkGetBufferMemoryRequirements2KHR;
PFN_vkGetImageSparseMemoryRequirements2KHR vkLoader_vkGetImageSparseMemoryRequirements2KHR;
#endif
#ifdef VK_KHR_sampler_ycbcr_conversion
PFN_vkCreateSamplerYcbcrConversionKHR vkLoader_vkCreateSamplerYcbcrConversionKHR;
PFN_vkDestroySamplerYcbcrConversionKHR vkLoader_vkDestroySamplerYcbcrConversionKHR;
#endif
#ifdef VK_KHR_bind_memory2
PFN_vkBindBufferMemory2KHR vkLoader_vkBindBufferMemory2KHR;
PFN_vkBindImageMemory2KHR vkLoader_vkBindImageMemory2KHR;
#endif
#ifdef VK_EXT_validation_cache
PFN_vkCreateValidationCacheEXT vkLoader_vkCreateValidationCacheEXT;
PFN_vkDestroyValidationCacheEXT vkLoader_vkDestroyValidationCacheEXT;
PFN_vkMergeValidationCachesEXT vkLoader_vkMergeValidationCachesEXT;
PFN_vkGetValidationCacheDataEXT vkLoader_vkGetValidationCacheDataEXT;
#endif

	
static void* vkLoaderHandle = NULL;


#ifndef _WIN32
#define vkLoaderPlatformOpenLibrary(name) dlopen(name, RTLD_LAZY | RTLD_LOCAL)
#define vkLoaderPlatformGetProcAddr(handle, name) dlsym(handle, name)
#else
#define vkLoaderPlatformOpenLibrary(name) LoadLibraryA(name)
#define vkLoaderPlatformGetProcAddr(handle, name) GetProcAddress((HMODULE) handle, name)
#endif

VkBool32 vkLoaderInit()
{

#ifndef _WIN32
    const char* libName = "libvulkan.so.1";
#else
	const char* libName = "vulkan-1.dll";
#endif

    if (!vkLoaderHandle)
    {
        vkLoaderHandle = vkLoaderPlatformOpenLibrary(libName);
    }

    if (vkLoaderHandle)
    {
        vkLoader_vkGetInstanceProcAddr = (PFN_vkGetInstanceProcAddr)(vkLoaderPlatformGetProcAddr(vkLoaderHandle, "vkGetInstanceProcAddr"));
        if (!vkLoader_vkGetInstanceProcAddr)
		{
            return VK_FALSE;
		}
    }
	else
	{
		return VK_FALSE;
	}

	vkLoader_vkEnumerateInstanceExtensionProperties = (PFN_vkEnumerateInstanceExtensionProperties) vkGetInstanceProcAddr(nullptr, "vkEnumerateInstanceExtensionProperties");
	vkLoader_vkEnumerateInstanceLayerProperties = (PFN_vkEnumerateInstanceLayerProperties) vkGetInstanceProcAddr(nullptr, "vkEnumerateInstanceLayerProperties");
	vkLoader_vkCreateInstance = (PFN_vkCreateInstance) vkGetInstanceProcAddr(nullptr, "vkCreateInstance");
	
	return VK_TRUE;
}

VkBool32 vkLoaderInstanceInit(VkInstance instance)
{
	if (!vkLoaderHandle) return VK_FALSE;

    vkLoader_vkCreateInstance = (PFN_vkCreateInstance) vkGetInstanceProcAddr(instance, "vkCreateInstance");
    vkLoader_vkDestroyInstance = (PFN_vkDestroyInstance) vkGetInstanceProcAddr(instance, "vkDestroyInstance");
    vkLoader_vkEnumeratePhysicalDevices = (PFN_vkEnumeratePhysicalDevices) vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDevices");
    vkLoader_vkGetDeviceProcAddr = (PFN_vkGetDeviceProcAddr) vkGetInstanceProcAddr(instance, "vkGetDeviceProcAddr");
    vkLoader_vkGetInstanceProcAddr = (PFN_vkGetInstanceProcAddr) vkGetInstanceProcAddr(instance, "vkGetInstanceProcAddr");
    vkLoader_vkGetPhysicalDeviceProperties = (PFN_vkGetPhysicalDeviceProperties) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties");
    vkLoader_vkGetPhysicalDeviceQueueFamilyProperties = (PFN_vkGetPhysicalDeviceQueueFamilyProperties) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties");
    vkLoader_vkGetPhysicalDeviceMemoryProperties = (PFN_vkGetPhysicalDeviceMemoryProperties) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties");
    vkLoader_vkGetPhysicalDeviceFeatures = (PFN_vkGetPhysicalDeviceFeatures) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures");
    vkLoader_vkGetPhysicalDeviceFormatProperties = (PFN_vkGetPhysicalDeviceFormatProperties) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties");
    vkLoader_vkGetPhysicalDeviceImageFormatProperties = (PFN_vkGetPhysicalDeviceImageFormatProperties) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties");
    vkLoader_vkCreateDevice = (PFN_vkCreateDevice) vkGetInstanceProcAddr(instance, "vkCreateDevice");
    vkLoader_vkDestroyDevice = (PFN_vkDestroyDevice) vkGetInstanceProcAddr(instance, "vkDestroyDevice");
    vkLoader_vkEnumerateInstanceLayerProperties = (PFN_vkEnumerateInstanceLayerProperties) vkGetInstanceProcAddr(instance, "vkEnumerateInstanceLayerProperties");
    vkLoader_vkEnumerateInstanceExtensionProperties = (PFN_vkEnumerateInstanceExtensionProperties) vkGetInstanceProcAddr(instance, "vkEnumerateInstanceExtensionProperties");
    vkLoader_vkEnumerateDeviceLayerProperties = (PFN_vkEnumerateDeviceLayerProperties) vkGetInstanceProcAddr(instance, "vkEnumerateDeviceLayerProperties");
    vkLoader_vkEnumerateDeviceExtensionProperties = (PFN_vkEnumerateDeviceExtensionProperties) vkGetInstanceProcAddr(instance, "vkEnumerateDeviceExtensionProperties");
    vkLoader_vkGetDeviceQueue = (PFN_vkGetDeviceQueue) vkGetInstanceProcAddr(instance, "vkGetDeviceQueue");
    vkLoader_vkQueueSubmit = (PFN_vkQueueSubmit) vkGetInstanceProcAddr(instance, "vkQueueSubmit");
    vkLoader_vkQueueWaitIdle = (PFN_vkQueueWaitIdle) vkGetInstanceProcAddr(instance, "vkQueueWaitIdle");
    vkLoader_vkDeviceWaitIdle = (PFN_vkDeviceWaitIdle) vkGetInstanceProcAddr(instance, "vkDeviceWaitIdle");
    vkLoader_vkAllocateMemory = (PFN_vkAllocateMemory) vkGetInstanceProcAddr(instance, "vkAllocateMemory");
    vkLoader_vkFreeMemory = (PFN_vkFreeMemory) vkGetInstanceProcAddr(instance, "vkFreeMemory");
    vkLoader_vkMapMemory = (PFN_vkMapMemory) vkGetInstanceProcAddr(instance, "vkMapMemory");
    vkLoader_vkUnmapMemory = (PFN_vkUnmapMemory) vkGetInstanceProcAddr(instance, "vkUnmapMemory");
    vkLoader_vkFlushMappedMemoryRanges = (PFN_vkFlushMappedMemoryRanges) vkGetInstanceProcAddr(instance, "vkFlushMappedMemoryRanges");
    vkLoader_vkInvalidateMappedMemoryRanges = (PFN_vkInvalidateMappedMemoryRanges) vkGetInstanceProcAddr(instance, "vkInvalidateMappedMemoryRanges");
    vkLoader_vkGetDeviceMemoryCommitment = (PFN_vkGetDeviceMemoryCommitment) vkGetInstanceProcAddr(instance, "vkGetDeviceMemoryCommitment");
    vkLoader_vkGetBufferMemoryRequirements = (PFN_vkGetBufferMemoryRequirements) vkGetInstanceProcAddr(instance, "vkGetBufferMemoryRequirements");
    vkLoader_vkBindBufferMemory = (PFN_vkBindBufferMemory) vkGetInstanceProcAddr(instance, "vkBindBufferMemory");
    vkLoader_vkGetImageMemoryRequirements = (PFN_vkGetImageMemoryRequirements) vkGetInstanceProcAddr(instance, "vkGetImageMemoryRequirements");
    vkLoader_vkBindImageMemory = (PFN_vkBindImageMemory) vkGetInstanceProcAddr(instance, "vkBindImageMemory");
    vkLoader_vkGetImageSparseMemoryRequirements = (PFN_vkGetImageSparseMemoryRequirements) vkGetInstanceProcAddr(instance, "vkGetImageSparseMemoryRequirements");
    vkLoader_vkGetPhysicalDeviceSparseImageFormatProperties = (PFN_vkGetPhysicalDeviceSparseImageFormatProperties) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties");
    vkLoader_vkQueueBindSparse = (PFN_vkQueueBindSparse) vkGetInstanceProcAddr(instance, "vkQueueBindSparse");
    vkLoader_vkCreateFence = (PFN_vkCreateFence) vkGetInstanceProcAddr(instance, "vkCreateFence");
    vkLoader_vkDestroyFence = (PFN_vkDestroyFence) vkGetInstanceProcAddr(instance, "vkDestroyFence");
    vkLoader_vkResetFences = (PFN_vkResetFences) vkGetInstanceProcAddr(instance, "vkResetFences");
    vkLoader_vkGetFenceStatus = (PFN_vkGetFenceStatus) vkGetInstanceProcAddr(instance, "vkGetFenceStatus");
    vkLoader_vkWaitForFences = (PFN_vkWaitForFences) vkGetInstanceProcAddr(instance, "vkWaitForFences");
    vkLoader_vkCreateSemaphore = (PFN_vkCreateSemaphore) vkGetInstanceProcAddr(instance, "vkCreateSemaphore");
    vkLoader_vkDestroySemaphore = (PFN_vkDestroySemaphore) vkGetInstanceProcAddr(instance, "vkDestroySemaphore");
    vkLoader_vkCreateEvent = (PFN_vkCreateEvent) vkGetInstanceProcAddr(instance, "vkCreateEvent");
    vkLoader_vkDestroyEvent = (PFN_vkDestroyEvent) vkGetInstanceProcAddr(instance, "vkDestroyEvent");
    vkLoader_vkGetEventStatus = (PFN_vkGetEventStatus) vkGetInstanceProcAddr(instance, "vkGetEventStatus");
    vkLoader_vkSetEvent = (PFN_vkSetEvent) vkGetInstanceProcAddr(instance, "vkSetEvent");
    vkLoader_vkResetEvent = (PFN_vkResetEvent) vkGetInstanceProcAddr(instance, "vkResetEvent");
    vkLoader_vkCreateQueryPool = (PFN_vkCreateQueryPool) vkGetInstanceProcAddr(instance, "vkCreateQueryPool");
    vkLoader_vkDestroyQueryPool = (PFN_vkDestroyQueryPool) vkGetInstanceProcAddr(instance, "vkDestroyQueryPool");
    vkLoader_vkGetQueryPoolResults = (PFN_vkGetQueryPoolResults) vkGetInstanceProcAddr(instance, "vkGetQueryPoolResults");
    vkLoader_vkCreateBuffer = (PFN_vkCreateBuffer) vkGetInstanceProcAddr(instance, "vkCreateBuffer");
    vkLoader_vkDestroyBuffer = (PFN_vkDestroyBuffer) vkGetInstanceProcAddr(instance, "vkDestroyBuffer");
    vkLoader_vkCreateBufferView = (PFN_vkCreateBufferView) vkGetInstanceProcAddr(instance, "vkCreateBufferView");
    vkLoader_vkDestroyBufferView = (PFN_vkDestroyBufferView) vkGetInstanceProcAddr(instance, "vkDestroyBufferView");
    vkLoader_vkCreateImage = (PFN_vkCreateImage) vkGetInstanceProcAddr(instance, "vkCreateImage");
    vkLoader_vkDestroyImage = (PFN_vkDestroyImage) vkGetInstanceProcAddr(instance, "vkDestroyImage");
    vkLoader_vkGetImageSubresourceLayout = (PFN_vkGetImageSubresourceLayout) vkGetInstanceProcAddr(instance, "vkGetImageSubresourceLayout");
    vkLoader_vkCreateImageView = (PFN_vkCreateImageView) vkGetInstanceProcAddr(instance, "vkCreateImageView");
    vkLoader_vkDestroyImageView = (PFN_vkDestroyImageView) vkGetInstanceProcAddr(instance, "vkDestroyImageView");
    vkLoader_vkCreateShaderModule = (PFN_vkCreateShaderModule) vkGetInstanceProcAddr(instance, "vkCreateShaderModule");
    vkLoader_vkDestroyShaderModule = (PFN_vkDestroyShaderModule) vkGetInstanceProcAddr(instance, "vkDestroyShaderModule");
    vkLoader_vkCreatePipelineCache = (PFN_vkCreatePipelineCache) vkGetInstanceProcAddr(instance, "vkCreatePipelineCache");
    vkLoader_vkDestroyPipelineCache = (PFN_vkDestroyPipelineCache) vkGetInstanceProcAddr(instance, "vkDestroyPipelineCache");
    vkLoader_vkGetPipelineCacheData = (PFN_vkGetPipelineCacheData) vkGetInstanceProcAddr(instance, "vkGetPipelineCacheData");
    vkLoader_vkMergePipelineCaches = (PFN_vkMergePipelineCaches) vkGetInstanceProcAddr(instance, "vkMergePipelineCaches");
    vkLoader_vkCreateGraphicsPipelines = (PFN_vkCreateGraphicsPipelines) vkGetInstanceProcAddr(instance, "vkCreateGraphicsPipelines");
    vkLoader_vkCreateComputePipelines = (PFN_vkCreateComputePipelines) vkGetInstanceProcAddr(instance, "vkCreateComputePipelines");
    vkLoader_vkDestroyPipeline = (PFN_vkDestroyPipeline) vkGetInstanceProcAddr(instance, "vkDestroyPipeline");
    vkLoader_vkCreatePipelineLayout = (PFN_vkCreatePipelineLayout) vkGetInstanceProcAddr(instance, "vkCreatePipelineLayout");
    vkLoader_vkDestroyPipelineLayout = (PFN_vkDestroyPipelineLayout) vkGetInstanceProcAddr(instance, "vkDestroyPipelineLayout");
    vkLoader_vkCreateSampler = (PFN_vkCreateSampler) vkGetInstanceProcAddr(instance, "vkCreateSampler");
    vkLoader_vkDestroySampler = (PFN_vkDestroySampler) vkGetInstanceProcAddr(instance, "vkDestroySampler");
    vkLoader_vkCreateDescriptorSetLayout = (PFN_vkCreateDescriptorSetLayout) vkGetInstanceProcAddr(instance, "vkCreateDescriptorSetLayout");
    vkLoader_vkDestroyDescriptorSetLayout = (PFN_vkDestroyDescriptorSetLayout) vkGetInstanceProcAddr(instance, "vkDestroyDescriptorSetLayout");
    vkLoader_vkCreateDescriptorPool = (PFN_vkCreateDescriptorPool) vkGetInstanceProcAddr(instance, "vkCreateDescriptorPool");
    vkLoader_vkDestroyDescriptorPool = (PFN_vkDestroyDescriptorPool) vkGetInstanceProcAddr(instance, "vkDestroyDescriptorPool");
    vkLoader_vkResetDescriptorPool = (PFN_vkResetDescriptorPool) vkGetInstanceProcAddr(instance, "vkResetDescriptorPool");
    vkLoader_vkAllocateDescriptorSets = (PFN_vkAllocateDescriptorSets) vkGetInstanceProcAddr(instance, "vkAllocateDescriptorSets");
    vkLoader_vkFreeDescriptorSets = (PFN_vkFreeDescriptorSets) vkGetInstanceProcAddr(instance, "vkFreeDescriptorSets");
    vkLoader_vkUpdateDescriptorSets = (PFN_vkUpdateDescriptorSets) vkGetInstanceProcAddr(instance, "vkUpdateDescriptorSets");
    vkLoader_vkCreateFramebuffer = (PFN_vkCreateFramebuffer) vkGetInstanceProcAddr(instance, "vkCreateFramebuffer");
    vkLoader_vkDestroyFramebuffer = (PFN_vkDestroyFramebuffer) vkGetInstanceProcAddr(instance, "vkDestroyFramebuffer");
    vkLoader_vkCreateRenderPass = (PFN_vkCreateRenderPass) vkGetInstanceProcAddr(instance, "vkCreateRenderPass");
    vkLoader_vkDestroyRenderPass = (PFN_vkDestroyRenderPass) vkGetInstanceProcAddr(instance, "vkDestroyRenderPass");
    vkLoader_vkGetRenderAreaGranularity = (PFN_vkGetRenderAreaGranularity) vkGetInstanceProcAddr(instance, "vkGetRenderAreaGranularity");
    vkLoader_vkCreateCommandPool = (PFN_vkCreateCommandPool) vkGetInstanceProcAddr(instance, "vkCreateCommandPool");
    vkLoader_vkDestroyCommandPool = (PFN_vkDestroyCommandPool) vkGetInstanceProcAddr(instance, "vkDestroyCommandPool");
    vkLoader_vkResetCommandPool = (PFN_vkResetCommandPool) vkGetInstanceProcAddr(instance, "vkResetCommandPool");
    vkLoader_vkAllocateCommandBuffers = (PFN_vkAllocateCommandBuffers) vkGetInstanceProcAddr(instance, "vkAllocateCommandBuffers");
    vkLoader_vkFreeCommandBuffers = (PFN_vkFreeCommandBuffers) vkGetInstanceProcAddr(instance, "vkFreeCommandBuffers");
    vkLoader_vkBeginCommandBuffer = (PFN_vkBeginCommandBuffer) vkGetInstanceProcAddr(instance, "vkBeginCommandBuffer");
    vkLoader_vkEndCommandBuffer = (PFN_vkEndCommandBuffer) vkGetInstanceProcAddr(instance, "vkEndCommandBuffer");
    vkLoader_vkResetCommandBuffer = (PFN_vkResetCommandBuffer) vkGetInstanceProcAddr(instance, "vkResetCommandBuffer");
    vkLoader_vkCmdBindPipeline = (PFN_vkCmdBindPipeline) vkGetInstanceProcAddr(instance, "vkCmdBindPipeline");
    vkLoader_vkCmdSetViewport = (PFN_vkCmdSetViewport) vkGetInstanceProcAddr(instance, "vkCmdSetViewport");
    vkLoader_vkCmdSetScissor = (PFN_vkCmdSetScissor) vkGetInstanceProcAddr(instance, "vkCmdSetScissor");
    vkLoader_vkCmdSetLineWidth = (PFN_vkCmdSetLineWidth) vkGetInstanceProcAddr(instance, "vkCmdSetLineWidth");
    vkLoader_vkCmdSetDepthBias = (PFN_vkCmdSetDepthBias) vkGetInstanceProcAddr(instance, "vkCmdSetDepthBias");
    vkLoader_vkCmdSetBlendConstants = (PFN_vkCmdSetBlendConstants) vkGetInstanceProcAddr(instance, "vkCmdSetBlendConstants");
    vkLoader_vkCmdSetDepthBounds = (PFN_vkCmdSetDepthBounds) vkGetInstanceProcAddr(instance, "vkCmdSetDepthBounds");
    vkLoader_vkCmdSetStencilCompareMask = (PFN_vkCmdSetStencilCompareMask) vkGetInstanceProcAddr(instance, "vkCmdSetStencilCompareMask");
    vkLoader_vkCmdSetStencilWriteMask = (PFN_vkCmdSetStencilWriteMask) vkGetInstanceProcAddr(instance, "vkCmdSetStencilWriteMask");
    vkLoader_vkCmdSetStencilReference = (PFN_vkCmdSetStencilReference) vkGetInstanceProcAddr(instance, "vkCmdSetStencilReference");
    vkLoader_vkCmdBindDescriptorSets = (PFN_vkCmdBindDescriptorSets) vkGetInstanceProcAddr(instance, "vkCmdBindDescriptorSets");
    vkLoader_vkCmdBindIndexBuffer = (PFN_vkCmdBindIndexBuffer) vkGetInstanceProcAddr(instance, "vkCmdBindIndexBuffer");
    vkLoader_vkCmdBindVertexBuffers = (PFN_vkCmdBindVertexBuffers) vkGetInstanceProcAddr(instance, "vkCmdBindVertexBuffers");
    vkLoader_vkCmdDraw = (PFN_vkCmdDraw) vkGetInstanceProcAddr(instance, "vkCmdDraw");
    vkLoader_vkCmdDrawIndexed = (PFN_vkCmdDrawIndexed) vkGetInstanceProcAddr(instance, "vkCmdDrawIndexed");
    vkLoader_vkCmdDrawIndirect = (PFN_vkCmdDrawIndirect) vkGetInstanceProcAddr(instance, "vkCmdDrawIndirect");
    vkLoader_vkCmdDrawIndexedIndirect = (PFN_vkCmdDrawIndexedIndirect) vkGetInstanceProcAddr(instance, "vkCmdDrawIndexedIndirect");
    vkLoader_vkCmdDispatch = (PFN_vkCmdDispatch) vkGetInstanceProcAddr(instance, "vkCmdDispatch");
    vkLoader_vkCmdDispatchIndirect = (PFN_vkCmdDispatchIndirect) vkGetInstanceProcAddr(instance, "vkCmdDispatchIndirect");
    vkLoader_vkCmdCopyBuffer = (PFN_vkCmdCopyBuffer) vkGetInstanceProcAddr(instance, "vkCmdCopyBuffer");
    vkLoader_vkCmdCopyImage = (PFN_vkCmdCopyImage) vkGetInstanceProcAddr(instance, "vkCmdCopyImage");
    vkLoader_vkCmdBlitImage = (PFN_vkCmdBlitImage) vkGetInstanceProcAddr(instance, "vkCmdBlitImage");
    vkLoader_vkCmdCopyBufferToImage = (PFN_vkCmdCopyBufferToImage) vkGetInstanceProcAddr(instance, "vkCmdCopyBufferToImage");
    vkLoader_vkCmdCopyImageToBuffer = (PFN_vkCmdCopyImageToBuffer) vkGetInstanceProcAddr(instance, "vkCmdCopyImageToBuffer");
    vkLoader_vkCmdUpdateBuffer = (PFN_vkCmdUpdateBuffer) vkGetInstanceProcAddr(instance, "vkCmdUpdateBuffer");
    vkLoader_vkCmdFillBuffer = (PFN_vkCmdFillBuffer) vkGetInstanceProcAddr(instance, "vkCmdFillBuffer");
    vkLoader_vkCmdClearColorImage = (PFN_vkCmdClearColorImage) vkGetInstanceProcAddr(instance, "vkCmdClearColorImage");
    vkLoader_vkCmdClearDepthStencilImage = (PFN_vkCmdClearDepthStencilImage) vkGetInstanceProcAddr(instance, "vkCmdClearDepthStencilImage");
    vkLoader_vkCmdClearAttachments = (PFN_vkCmdClearAttachments) vkGetInstanceProcAddr(instance, "vkCmdClearAttachments");
    vkLoader_vkCmdResolveImage = (PFN_vkCmdResolveImage) vkGetInstanceProcAddr(instance, "vkCmdResolveImage");
    vkLoader_vkCmdSetEvent = (PFN_vkCmdSetEvent) vkGetInstanceProcAddr(instance, "vkCmdSetEvent");
    vkLoader_vkCmdResetEvent = (PFN_vkCmdResetEvent) vkGetInstanceProcAddr(instance, "vkCmdResetEvent");
    vkLoader_vkCmdWaitEvents = (PFN_vkCmdWaitEvents) vkGetInstanceProcAddr(instance, "vkCmdWaitEvents");
    vkLoader_vkCmdPipelineBarrier = (PFN_vkCmdPipelineBarrier) vkGetInstanceProcAddr(instance, "vkCmdPipelineBarrier");
    vkLoader_vkCmdBeginQuery = (PFN_vkCmdBeginQuery) vkGetInstanceProcAddr(instance, "vkCmdBeginQuery");
    vkLoader_vkCmdEndQuery = (PFN_vkCmdEndQuery) vkGetInstanceProcAddr(instance, "vkCmdEndQuery");
    vkLoader_vkCmdResetQueryPool = (PFN_vkCmdResetQueryPool) vkGetInstanceProcAddr(instance, "vkCmdResetQueryPool");
    vkLoader_vkCmdWriteTimestamp = (PFN_vkCmdWriteTimestamp) vkGetInstanceProcAddr(instance, "vkCmdWriteTimestamp");
    vkLoader_vkCmdCopyQueryPoolResults = (PFN_vkCmdCopyQueryPoolResults) vkGetInstanceProcAddr(instance, "vkCmdCopyQueryPoolResults");
    vkLoader_vkCmdPushConstants = (PFN_vkCmdPushConstants) vkGetInstanceProcAddr(instance, "vkCmdPushConstants");
    vkLoader_vkCmdBeginRenderPass = (PFN_vkCmdBeginRenderPass) vkGetInstanceProcAddr(instance, "vkCmdBeginRenderPass");
    vkLoader_vkCmdNextSubpass = (PFN_vkCmdNextSubpass) vkGetInstanceProcAddr(instance, "vkCmdNextSubpass");
    vkLoader_vkCmdEndRenderPass = (PFN_vkCmdEndRenderPass) vkGetInstanceProcAddr(instance, "vkCmdEndRenderPass");
    vkLoader_vkCmdExecuteCommands = (PFN_vkCmdExecuteCommands) vkGetInstanceProcAddr(instance, "vkCmdExecuteCommands");
#ifdef VK_KHR_surface
    vkLoader_vkDestroySurfaceKHR = (PFN_vkDestroySurfaceKHR) vkGetInstanceProcAddr(instance, "vkDestroySurfaceKHR");
    vkLoader_vkGetPhysicalDeviceSurfaceSupportKHR = (PFN_vkGetPhysicalDeviceSurfaceSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceSupportKHR");
    vkLoader_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = (PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR");
    vkLoader_vkGetPhysicalDeviceSurfaceFormatsKHR = (PFN_vkGetPhysicalDeviceSurfaceFormatsKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormatsKHR");
    vkLoader_vkGetPhysicalDeviceSurfacePresentModesKHR = (PFN_vkGetPhysicalDeviceSurfacePresentModesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfacePresentModesKHR");
#endif
#ifdef VK_KHR_swapchain
    vkLoader_vkCreateSwapchainKHR = (PFN_vkCreateSwapchainKHR) vkGetInstanceProcAddr(instance, "vkCreateSwapchainKHR");
    vkLoader_vkDestroySwapchainKHR = (PFN_vkDestroySwapchainKHR) vkGetInstanceProcAddr(instance, "vkDestroySwapchainKHR");
    vkLoader_vkGetSwapchainImagesKHR = (PFN_vkGetSwapchainImagesKHR) vkGetInstanceProcAddr(instance, "vkGetSwapchainImagesKHR");
    vkLoader_vkAcquireNextImageKHR = (PFN_vkAcquireNextImageKHR) vkGetInstanceProcAddr(instance, "vkAcquireNextImageKHR");
    vkLoader_vkQueuePresentKHR = (PFN_vkQueuePresentKHR) vkGetInstanceProcAddr(instance, "vkQueuePresentKHR");
#endif
#ifdef VK_KHR_display
    vkLoader_vkGetPhysicalDeviceDisplayPropertiesKHR = (PFN_vkGetPhysicalDeviceDisplayPropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPropertiesKHR");
    vkLoader_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = (PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR");
    vkLoader_vkGetDisplayPlaneSupportedDisplaysKHR = (PFN_vkGetDisplayPlaneSupportedDisplaysKHR) vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneSupportedDisplaysKHR");
    vkLoader_vkGetDisplayModePropertiesKHR = (PFN_vkGetDisplayModePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetDisplayModePropertiesKHR");
    vkLoader_vkCreateDisplayModeKHR = (PFN_vkCreateDisplayModeKHR) vkGetInstanceProcAddr(instance, "vkCreateDisplayModeKHR");
    vkLoader_vkGetDisplayPlaneCapabilitiesKHR = (PFN_vkGetDisplayPlaneCapabilitiesKHR) vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneCapabilitiesKHR");
    vkLoader_vkCreateDisplayPlaneSurfaceKHR = (PFN_vkCreateDisplayPlaneSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateDisplayPlaneSurfaceKHR");
#endif
#ifdef VK_KHR_display_swapchain
    vkLoader_vkCreateSharedSwapchainsKHR = (PFN_vkCreateSharedSwapchainsKHR) vkGetInstanceProcAddr(instance, "vkCreateSharedSwapchainsKHR");
#endif
#ifdef VK_KHR_xlib_surface
    vkLoader_vkCreateXlibSurfaceKHR = (PFN_vkCreateXlibSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateXlibSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceXlibPresentationSupportKHR = (PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXlibPresentationSupportKHR");
#endif
#ifdef VK_KHR_xcb_surface
    vkLoader_vkCreateXcbSurfaceKHR = (PFN_vkCreateXcbSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateXcbSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceXcbPresentationSupportKHR = (PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXcbPresentationSupportKHR");
#endif
#ifdef VK_KHR_wayland_surface
    vkLoader_vkCreateWaylandSurfaceKHR = (PFN_vkCreateWaylandSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateWaylandSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceWaylandPresentationSupportKHR = (PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceWaylandPresentationSupportKHR");
#endif
#ifdef VK_KHR_mir_surface
    vkLoader_vkCreateMirSurfaceKHR = (PFN_vkCreateMirSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateMirSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceMirPresentationSupportKHR = (PFN_vkGetPhysicalDeviceMirPresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMirPresentationSupportKHR");
#endif
#ifdef VK_KHR_android_surface
    vkLoader_vkCreateAndroidSurfaceKHR = (PFN_vkCreateAndroidSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateAndroidSurfaceKHR");
#endif
#ifdef VK_KHR_win32_surface
    vkLoader_vkCreateWin32SurfaceKHR = (PFN_vkCreateWin32SurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateWin32SurfaceKHR");
    vkLoader_vkGetPhysicalDeviceWin32PresentationSupportKHR = (PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceWin32PresentationSupportKHR");
#endif
#ifdef VK_ANDROID_native_buffer
    vkLoader_vkGetSwapchainGrallocUsageANDROID = (PFN_vkGetSwapchainGrallocUsageANDROID) vkGetInstanceProcAddr(instance, "vkGetSwapchainGrallocUsageANDROID");
    vkLoader_vkAcquireImageANDROID = (PFN_vkAcquireImageANDROID) vkGetInstanceProcAddr(instance, "vkAcquireImageANDROID");
    vkLoader_vkQueueSignalReleaseImageANDROID = (PFN_vkQueueSignalReleaseImageANDROID) vkGetInstanceProcAddr(instance, "vkQueueSignalReleaseImageANDROID");
#endif
#ifdef VK_EXT_debug_report
    vkLoader_vkCreateDebugReportCallbackEXT = (PFN_vkCreateDebugReportCallbackEXT) vkGetInstanceProcAddr(instance, "vkCreateDebugReportCallbackEXT");
    vkLoader_vkDestroyDebugReportCallbackEXT = (PFN_vkDestroyDebugReportCallbackEXT) vkGetInstanceProcAddr(instance, "vkDestroyDebugReportCallbackEXT");
    vkLoader_vkDebugReportMessageEXT = (PFN_vkDebugReportMessageEXT) vkGetInstanceProcAddr(instance, "vkDebugReportMessageEXT");
#endif
#ifdef VK_EXT_debug_marker
    vkLoader_vkDebugMarkerSetObjectTagEXT = (PFN_vkDebugMarkerSetObjectTagEXT) vkGetInstanceProcAddr(instance, "vkDebugMarkerSetObjectTagEXT");
    vkLoader_vkDebugMarkerSetObjectNameEXT = (PFN_vkDebugMarkerSetObjectNameEXT) vkGetInstanceProcAddr(instance, "vkDebugMarkerSetObjectNameEXT");
    vkLoader_vkCmdDebugMarkerBeginEXT = (PFN_vkCmdDebugMarkerBeginEXT) vkGetInstanceProcAddr(instance, "vkCmdDebugMarkerBeginEXT");
    vkLoader_vkCmdDebugMarkerEndEXT = (PFN_vkCmdDebugMarkerEndEXT) vkGetInstanceProcAddr(instance, "vkCmdDebugMarkerEndEXT");
    vkLoader_vkCmdDebugMarkerInsertEXT = (PFN_vkCmdDebugMarkerInsertEXT) vkGetInstanceProcAddr(instance, "vkCmdDebugMarkerInsertEXT");
#endif
#ifdef VK_AMD_draw_indirect_count
    vkLoader_vkCmdDrawIndirectCountAMD = (PFN_vkCmdDrawIndirectCountAMD) vkGetInstanceProcAddr(instance, "vkCmdDrawIndirectCountAMD");
    vkLoader_vkCmdDrawIndexedIndirectCountAMD = (PFN_vkCmdDrawIndexedIndirectCountAMD) vkGetInstanceProcAddr(instance, "vkCmdDrawIndexedIndirectCountAMD");
#endif
#ifdef VK_AMD_shader_info
    vkLoader_vkGetShaderInfoAMD = (PFN_vkGetShaderInfoAMD) vkGetInstanceProcAddr(instance, "vkGetShaderInfoAMD");
#endif
#ifdef VK_NV_external_memory_capabilities
    vkLoader_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = (PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV");
#endif
#ifdef VK_NV_external_memory_win32
    vkLoader_vkGetMemoryWin32HandleNV = (PFN_vkGetMemoryWin32HandleNV) vkGetInstanceProcAddr(instance, "vkGetMemoryWin32HandleNV");
#endif
#ifdef VK_KHR_get_physical_device_properties2
    vkLoader_vkGetPhysicalDeviceFeatures2KHR = (PFN_vkGetPhysicalDeviceFeatures2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures2KHR");
    vkLoader_vkGetPhysicalDeviceProperties2KHR = (PFN_vkGetPhysicalDeviceProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties2KHR");
    vkLoader_vkGetPhysicalDeviceFormatProperties2KHR = (PFN_vkGetPhysicalDeviceFormatProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties2KHR");
    vkLoader_vkGetPhysicalDeviceImageFormatProperties2KHR = (PFN_vkGetPhysicalDeviceImageFormatProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties2KHR");
    vkLoader_vkGetPhysicalDeviceQueueFamilyProperties2KHR = (PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties2KHR");
    vkLoader_vkGetPhysicalDeviceMemoryProperties2KHR = (PFN_vkGetPhysicalDeviceMemoryProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties2KHR");
    vkLoader_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = (PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR");
#endif
#ifdef VK_KHX_device_group
    vkLoader_vkGetDeviceGroupPeerMemoryFeaturesKHX = (PFN_vkGetDeviceGroupPeerMemoryFeaturesKHX) vkGetInstanceProcAddr(instance, "vkGetDeviceGroupPeerMemoryFeaturesKHX");
    vkLoader_vkCmdSetDeviceMaskKHX = (PFN_vkCmdSetDeviceMaskKHX) vkGetInstanceProcAddr(instance, "vkCmdSetDeviceMaskKHX");
    vkLoader_vkCmdDispatchBaseKHX = (PFN_vkCmdDispatchBaseKHX) vkGetInstanceProcAddr(instance, "vkCmdDispatchBaseKHX");
    vkLoader_vkGetDeviceGroupPresentCapabilitiesKHX = (PFN_vkGetDeviceGroupPresentCapabilitiesKHX) vkGetInstanceProcAddr(instance, "vkGetDeviceGroupPresentCapabilitiesKHX");
    vkLoader_vkGetDeviceGroupSurfacePresentModesKHX = (PFN_vkGetDeviceGroupSurfacePresentModesKHX) vkGetInstanceProcAddr(instance, "vkGetDeviceGroupSurfacePresentModesKHX");
    vkLoader_vkGetPhysicalDevicePresentRectanglesKHX = (PFN_vkGetPhysicalDevicePresentRectanglesKHX) vkGetInstanceProcAddr(instance, "vkGetPhysicalDevicePresentRectanglesKHX");
    vkLoader_vkAcquireNextImage2KHX = (PFN_vkAcquireNextImage2KHX) vkGetInstanceProcAddr(instance, "vkAcquireNextImage2KHX");
#endif
#ifdef VK_NN_vi_surface
    vkLoader_vkCreateViSurfaceNN = (PFN_vkCreateViSurfaceNN) vkGetInstanceProcAddr(instance, "vkCreateViSurfaceNN");
#endif
#ifdef VK_KHR_maintenance1
    vkLoader_vkTrimCommandPoolKHR = (PFN_vkTrimCommandPoolKHR) vkGetInstanceProcAddr(instance, "vkTrimCommandPoolKHR");
#endif
#ifdef VK_KHX_device_group_creation
    vkLoader_vkEnumeratePhysicalDeviceGroupsKHX = (PFN_vkEnumeratePhysicalDeviceGroupsKHX) vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDeviceGroupsKHX");
#endif
#ifdef VK_KHR_external_memory_capabilities
    vkLoader_vkGetPhysicalDeviceExternalBufferPropertiesKHR = (PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalBufferPropertiesKHR");
#endif
#ifdef VK_KHR_external_memory_win32
    vkLoader_vkGetMemoryWin32HandleKHR = (PFN_vkGetMemoryWin32HandleKHR) vkGetInstanceProcAddr(instance, "vkGetMemoryWin32HandleKHR");
    vkLoader_vkGetMemoryWin32HandlePropertiesKHR = (PFN_vkGetMemoryWin32HandlePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetMemoryWin32HandlePropertiesKHR");
#endif
#ifdef VK_KHR_external_memory_fd
    vkLoader_vkGetMemoryFdKHR = (PFN_vkGetMemoryFdKHR) vkGetInstanceProcAddr(instance, "vkGetMemoryFdKHR");
    vkLoader_vkGetMemoryFdPropertiesKHR = (PFN_vkGetMemoryFdPropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetMemoryFdPropertiesKHR");
#endif
#ifdef VK_KHR_external_semaphore_capabilities
    vkLoader_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = (PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR");
#endif
#ifdef VK_KHR_external_semaphore_win32
    vkLoader_vkImportSemaphoreWin32HandleKHR = (PFN_vkImportSemaphoreWin32HandleKHR) vkGetInstanceProcAddr(instance, "vkImportSemaphoreWin32HandleKHR");
    vkLoader_vkGetSemaphoreWin32HandleKHR = (PFN_vkGetSemaphoreWin32HandleKHR) vkGetInstanceProcAddr(instance, "vkGetSemaphoreWin32HandleKHR");
#endif
#ifdef VK_KHR_external_semaphore_fd
    vkLoader_vkImportSemaphoreFdKHR = (PFN_vkImportSemaphoreFdKHR) vkGetInstanceProcAddr(instance, "vkImportSemaphoreFdKHR");
    vkLoader_vkGetSemaphoreFdKHR = (PFN_vkGetSemaphoreFdKHR) vkGetInstanceProcAddr(instance, "vkGetSemaphoreFdKHR");
#endif
#ifdef VK_KHR_push_descriptor
    vkLoader_vkCmdPushDescriptorSetKHR = (PFN_vkCmdPushDescriptorSetKHR) vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSetKHR");
#endif
#ifdef VK_KHR_descriptor_update_template
    vkLoader_vkCreateDescriptorUpdateTemplateKHR = (PFN_vkCreateDescriptorUpdateTemplateKHR) vkGetInstanceProcAddr(instance, "vkCreateDescriptorUpdateTemplateKHR");
    vkLoader_vkDestroyDescriptorUpdateTemplateKHR = (PFN_vkDestroyDescriptorUpdateTemplateKHR) vkGetInstanceProcAddr(instance, "vkDestroyDescriptorUpdateTemplateKHR");
    vkLoader_vkUpdateDescriptorSetWithTemplateKHR = (PFN_vkUpdateDescriptorSetWithTemplateKHR) vkGetInstanceProcAddr(instance, "vkUpdateDescriptorSetWithTemplateKHR");
    vkLoader_vkCmdPushDescriptorSetWithTemplateKHR = (PFN_vkCmdPushDescriptorSetWithTemplateKHR) vkGetInstanceProcAddr(instance, "vkCmdPushDescriptorSetWithTemplateKHR");
#endif
#ifdef VK_NVX_device_generated_commands
    vkLoader_vkCmdProcessCommandsNVX = (PFN_vkCmdProcessCommandsNVX) vkGetInstanceProcAddr(instance, "vkCmdProcessCommandsNVX");
    vkLoader_vkCmdReserveSpaceForCommandsNVX = (PFN_vkCmdReserveSpaceForCommandsNVX) vkGetInstanceProcAddr(instance, "vkCmdReserveSpaceForCommandsNVX");
    vkLoader_vkCreateIndirectCommandsLayoutNVX = (PFN_vkCreateIndirectCommandsLayoutNVX) vkGetInstanceProcAddr(instance, "vkCreateIndirectCommandsLayoutNVX");
    vkLoader_vkDestroyIndirectCommandsLayoutNVX = (PFN_vkDestroyIndirectCommandsLayoutNVX) vkGetInstanceProcAddr(instance, "vkDestroyIndirectCommandsLayoutNVX");
    vkLoader_vkCreateObjectTableNVX = (PFN_vkCreateObjectTableNVX) vkGetInstanceProcAddr(instance, "vkCreateObjectTableNVX");
    vkLoader_vkDestroyObjectTableNVX = (PFN_vkDestroyObjectTableNVX) vkGetInstanceProcAddr(instance, "vkDestroyObjectTableNVX");
    vkLoader_vkRegisterObjectsNVX = (PFN_vkRegisterObjectsNVX) vkGetInstanceProcAddr(instance, "vkRegisterObjectsNVX");
    vkLoader_vkUnregisterObjectsNVX = (PFN_vkUnregisterObjectsNVX) vkGetInstanceProcAddr(instance, "vkUnregisterObjectsNVX");
    vkLoader_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX = (PFN_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX");
#endif
#ifdef VK_NV_clip_space_w_scaling
    vkLoader_vkCmdSetViewportWScalingNV = (PFN_vkCmdSetViewportWScalingNV) vkGetInstanceProcAddr(instance, "vkCmdSetViewportWScalingNV");
#endif
#ifdef VK_EXT_direct_mode_display
    vkLoader_vkReleaseDisplayEXT = (PFN_vkReleaseDisplayEXT) vkGetInstanceProcAddr(instance, "vkReleaseDisplayEXT");
#endif
#ifdef VK_EXT_acquire_xlib_display
    vkLoader_vkAcquireXlibDisplayEXT = (PFN_vkAcquireXlibDisplayEXT) vkGetInstanceProcAddr(instance, "vkAcquireXlibDisplayEXT");
    vkLoader_vkGetRandROutputDisplayEXT = (PFN_vkGetRandROutputDisplayEXT) vkGetInstanceProcAddr(instance, "vkGetRandROutputDisplayEXT");
#endif
#ifdef VK_EXT_display_surface_counter
    vkLoader_vkGetPhysicalDeviceSurfaceCapabilities2EXT = (PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2EXT");
#endif
#ifdef VK_EXT_display_control
    vkLoader_vkDisplayPowerControlEXT = (PFN_vkDisplayPowerControlEXT) vkGetInstanceProcAddr(instance, "vkDisplayPowerControlEXT");
    vkLoader_vkRegisterDeviceEventEXT = (PFN_vkRegisterDeviceEventEXT) vkGetInstanceProcAddr(instance, "vkRegisterDeviceEventEXT");
    vkLoader_vkRegisterDisplayEventEXT = (PFN_vkRegisterDisplayEventEXT) vkGetInstanceProcAddr(instance, "vkRegisterDisplayEventEXT");
    vkLoader_vkGetSwapchainCounterEXT = (PFN_vkGetSwapchainCounterEXT) vkGetInstanceProcAddr(instance, "vkGetSwapchainCounterEXT");
#endif
#ifdef VK_GOOGLE_display_timing
    vkLoader_vkGetRefreshCycleDurationGOOGLE = (PFN_vkGetRefreshCycleDurationGOOGLE) vkGetInstanceProcAddr(instance, "vkGetRefreshCycleDurationGOOGLE");
    vkLoader_vkGetPastPresentationTimingGOOGLE = (PFN_vkGetPastPresentationTimingGOOGLE) vkGetInstanceProcAddr(instance, "vkGetPastPresentationTimingGOOGLE");
#endif
#ifdef VK_EXT_discard_rectangles
    vkLoader_vkCmdSetDiscardRectangleEXT = (PFN_vkCmdSetDiscardRectangleEXT) vkGetInstanceProcAddr(instance, "vkCmdSetDiscardRectangleEXT");
#endif
#ifdef VK_EXT_hdr_metadata
    vkLoader_vkSetHdrMetadataEXT = (PFN_vkSetHdrMetadataEXT) vkGetInstanceProcAddr(instance, "vkSetHdrMetadataEXT");
#endif
#ifdef VK_KHR_shared_presentable_image
    vkLoader_vkGetSwapchainStatusKHR = (PFN_vkGetSwapchainStatusKHR) vkGetInstanceProcAddr(instance, "vkGetSwapchainStatusKHR");
#endif
#ifdef VK_KHR_external_fence_capabilities
    vkLoader_vkGetPhysicalDeviceExternalFencePropertiesKHR = (PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalFencePropertiesKHR");
#endif
#ifdef VK_KHR_external_fence_win32
    vkLoader_vkImportFenceWin32HandleKHR = (PFN_vkImportFenceWin32HandleKHR) vkGetInstanceProcAddr(instance, "vkImportFenceWin32HandleKHR");
    vkLoader_vkGetFenceWin32HandleKHR = (PFN_vkGetFenceWin32HandleKHR) vkGetInstanceProcAddr(instance, "vkGetFenceWin32HandleKHR");
#endif
#ifdef VK_KHR_external_fence_fd
    vkLoader_vkImportFenceFdKHR = (PFN_vkImportFenceFdKHR) vkGetInstanceProcAddr(instance, "vkImportFenceFdKHR");
    vkLoader_vkGetFenceFdKHR = (PFN_vkGetFenceFdKHR) vkGetInstanceProcAddr(instance, "vkGetFenceFdKHR");
#endif
#ifdef VK_KHR_get_surface_capabilities2
    vkLoader_vkGetPhysicalDeviceSurfaceCapabilities2KHR = (PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2KHR");
    vkLoader_vkGetPhysicalDeviceSurfaceFormats2KHR = (PFN_vkGetPhysicalDeviceSurfaceFormats2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormats2KHR");
#endif
#ifdef VK_MVK_ios_surface
    vkLoader_vkCreateIOSSurfaceMVK = (PFN_vkCreateIOSSurfaceMVK) vkGetInstanceProcAddr(instance, "vkCreateIOSSurfaceMVK");
#endif
#ifdef VK_MVK_macos_surface
    vkLoader_vkCreateMacOSSurfaceMVK = (PFN_vkCreateMacOSSurfaceMVK) vkGetInstanceProcAddr(instance, "vkCreateMacOSSurfaceMVK");
#endif
#ifdef VK_EXT_sample_locations
    vkLoader_vkCmdSetSampleLocationsEXT = (PFN_vkCmdSetSampleLocationsEXT) vkGetInstanceProcAddr(instance, "vkCmdSetSampleLocationsEXT");
    vkLoader_vkGetPhysicalDeviceMultisamplePropertiesEXT = (PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMultisamplePropertiesEXT");
#endif
#ifdef VK_KHR_get_memory_requirements2
    vkLoader_vkGetImageMemoryRequirements2KHR = (PFN_vkGetImageMemoryRequirements2KHR) vkGetInstanceProcAddr(instance, "vkGetImageMemoryRequirements2KHR");
    vkLoader_vkGetBufferMemoryRequirements2KHR = (PFN_vkGetBufferMemoryRequirements2KHR) vkGetInstanceProcAddr(instance, "vkGetBufferMemoryRequirements2KHR");
    vkLoader_vkGetImageSparseMemoryRequirements2KHR = (PFN_vkGetImageSparseMemoryRequirements2KHR) vkGetInstanceProcAddr(instance, "vkGetImageSparseMemoryRequirements2KHR");
#endif
#ifdef VK_KHR_sampler_ycbcr_conversion
    vkLoader_vkCreateSamplerYcbcrConversionKHR = (PFN_vkCreateSamplerYcbcrConversionKHR) vkGetInstanceProcAddr(instance, "vkCreateSamplerYcbcrConversionKHR");
    vkLoader_vkDestroySamplerYcbcrConversionKHR = (PFN_vkDestroySamplerYcbcrConversionKHR) vkGetInstanceProcAddr(instance, "vkDestroySamplerYcbcrConversionKHR");
#endif
#ifdef VK_KHR_bind_memory2
    vkLoader_vkBindBufferMemory2KHR = (PFN_vkBindBufferMemory2KHR) vkGetInstanceProcAddr(instance, "vkBindBufferMemory2KHR");
    vkLoader_vkBindImageMemory2KHR = (PFN_vkBindImageMemory2KHR) vkGetInstanceProcAddr(instance, "vkBindImageMemory2KHR");
#endif
#ifdef VK_EXT_validation_cache
    vkLoader_vkCreateValidationCacheEXT = (PFN_vkCreateValidationCacheEXT) vkGetInstanceProcAddr(instance, "vkCreateValidationCacheEXT");
    vkLoader_vkDestroyValidationCacheEXT = (PFN_vkDestroyValidationCacheEXT) vkGetInstanceProcAddr(instance, "vkDestroyValidationCacheEXT");
    vkLoader_vkMergeValidationCachesEXT = (PFN_vkMergeValidationCachesEXT) vkGetInstanceProcAddr(instance, "vkMergeValidationCachesEXT");
    vkLoader_vkGetValidationCacheDataEXT = (PFN_vkGetValidationCacheDataEXT) vkGetInstanceProcAddr(instance, "vkGetValidationCacheDataEXT");
#endif

	
	return VK_TRUE;
}

VkBool32 vkLoaderDeviceInit(VkDevice device)
{
	if (!vkLoaderHandle) return VK_FALSE;

    vkLoader_vkCreateInstance = (PFN_vkCreateInstance) vkGetDeviceProcAddr(device, "vkCreateInstance");
    vkLoader_vkDestroyInstance = (PFN_vkDestroyInstance) vkGetDeviceProcAddr(device, "vkDestroyInstance");
    vkLoader_vkEnumeratePhysicalDevices = (PFN_vkEnumeratePhysicalDevices) vkGetDeviceProcAddr(device, "vkEnumeratePhysicalDevices");
    vkLoader_vkGetDeviceProcAddr = (PFN_vkGetDeviceProcAddr) vkGetDeviceProcAddr(device, "vkGetDeviceProcAddr");
    vkLoader_vkGetInstanceProcAddr = (PFN_vkGetInstanceProcAddr) vkGetDeviceProcAddr(device, "vkGetInstanceProcAddr");
    vkLoader_vkGetPhysicalDeviceProperties = (PFN_vkGetPhysicalDeviceProperties) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceProperties");
    vkLoader_vkGetPhysicalDeviceQueueFamilyProperties = (PFN_vkGetPhysicalDeviceQueueFamilyProperties) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceQueueFamilyProperties");
    vkLoader_vkGetPhysicalDeviceMemoryProperties = (PFN_vkGetPhysicalDeviceMemoryProperties) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceMemoryProperties");
    vkLoader_vkGetPhysicalDeviceFeatures = (PFN_vkGetPhysicalDeviceFeatures) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceFeatures");
    vkLoader_vkGetPhysicalDeviceFormatProperties = (PFN_vkGetPhysicalDeviceFormatProperties) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceFormatProperties");
    vkLoader_vkGetPhysicalDeviceImageFormatProperties = (PFN_vkGetPhysicalDeviceImageFormatProperties) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceImageFormatProperties");
    vkLoader_vkCreateDevice = (PFN_vkCreateDevice) vkGetDeviceProcAddr(device, "vkCreateDevice");
    vkLoader_vkDestroyDevice = (PFN_vkDestroyDevice) vkGetDeviceProcAddr(device, "vkDestroyDevice");
    vkLoader_vkEnumerateInstanceLayerProperties = (PFN_vkEnumerateInstanceLayerProperties) vkGetDeviceProcAddr(device, "vkEnumerateInstanceLayerProperties");
    vkLoader_vkEnumerateInstanceExtensionProperties = (PFN_vkEnumerateInstanceExtensionProperties) vkGetDeviceProcAddr(device, "vkEnumerateInstanceExtensionProperties");
    vkLoader_vkEnumerateDeviceLayerProperties = (PFN_vkEnumerateDeviceLayerProperties) vkGetDeviceProcAddr(device, "vkEnumerateDeviceLayerProperties");
    vkLoader_vkEnumerateDeviceExtensionProperties = (PFN_vkEnumerateDeviceExtensionProperties) vkGetDeviceProcAddr(device, "vkEnumerateDeviceExtensionProperties");
    vkLoader_vkGetDeviceQueue = (PFN_vkGetDeviceQueue) vkGetDeviceProcAddr(device, "vkGetDeviceQueue");
    vkLoader_vkQueueSubmit = (PFN_vkQueueSubmit) vkGetDeviceProcAddr(device, "vkQueueSubmit");
    vkLoader_vkQueueWaitIdle = (PFN_vkQueueWaitIdle) vkGetDeviceProcAddr(device, "vkQueueWaitIdle");
    vkLoader_vkDeviceWaitIdle = (PFN_vkDeviceWaitIdle) vkGetDeviceProcAddr(device, "vkDeviceWaitIdle");
    vkLoader_vkAllocateMemory = (PFN_vkAllocateMemory) vkGetDeviceProcAddr(device, "vkAllocateMemory");
    vkLoader_vkFreeMemory = (PFN_vkFreeMemory) vkGetDeviceProcAddr(device, "vkFreeMemory");
    vkLoader_vkMapMemory = (PFN_vkMapMemory) vkGetDeviceProcAddr(device, "vkMapMemory");
    vkLoader_vkUnmapMemory = (PFN_vkUnmapMemory) vkGetDeviceProcAddr(device, "vkUnmapMemory");
    vkLoader_vkFlushMappedMemoryRanges = (PFN_vkFlushMappedMemoryRanges) vkGetDeviceProcAddr(device, "vkFlushMappedMemoryRanges");
    vkLoader_vkInvalidateMappedMemoryRanges = (PFN_vkInvalidateMappedMemoryRanges) vkGetDeviceProcAddr(device, "vkInvalidateMappedMemoryRanges");
    vkLoader_vkGetDeviceMemoryCommitment = (PFN_vkGetDeviceMemoryCommitment) vkGetDeviceProcAddr(device, "vkGetDeviceMemoryCommitment");
    vkLoader_vkGetBufferMemoryRequirements = (PFN_vkGetBufferMemoryRequirements) vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements");
    vkLoader_vkBindBufferMemory = (PFN_vkBindBufferMemory) vkGetDeviceProcAddr(device, "vkBindBufferMemory");
    vkLoader_vkGetImageMemoryRequirements = (PFN_vkGetImageMemoryRequirements) vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements");
    vkLoader_vkBindImageMemory = (PFN_vkBindImageMemory) vkGetDeviceProcAddr(device, "vkBindImageMemory");
    vkLoader_vkGetImageSparseMemoryRequirements = (PFN_vkGetImageSparseMemoryRequirements) vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements");
    vkLoader_vkGetPhysicalDeviceSparseImageFormatProperties = (PFN_vkGetPhysicalDeviceSparseImageFormatProperties) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSparseImageFormatProperties");
    vkLoader_vkQueueBindSparse = (PFN_vkQueueBindSparse) vkGetDeviceProcAddr(device, "vkQueueBindSparse");
    vkLoader_vkCreateFence = (PFN_vkCreateFence) vkGetDeviceProcAddr(device, "vkCreateFence");
    vkLoader_vkDestroyFence = (PFN_vkDestroyFence) vkGetDeviceProcAddr(device, "vkDestroyFence");
    vkLoader_vkResetFences = (PFN_vkResetFences) vkGetDeviceProcAddr(device, "vkResetFences");
    vkLoader_vkGetFenceStatus = (PFN_vkGetFenceStatus) vkGetDeviceProcAddr(device, "vkGetFenceStatus");
    vkLoader_vkWaitForFences = (PFN_vkWaitForFences) vkGetDeviceProcAddr(device, "vkWaitForFences");
    vkLoader_vkCreateSemaphore = (PFN_vkCreateSemaphore) vkGetDeviceProcAddr(device, "vkCreateSemaphore");
    vkLoader_vkDestroySemaphore = (PFN_vkDestroySemaphore) vkGetDeviceProcAddr(device, "vkDestroySemaphore");
    vkLoader_vkCreateEvent = (PFN_vkCreateEvent) vkGetDeviceProcAddr(device, "vkCreateEvent");
    vkLoader_vkDestroyEvent = (PFN_vkDestroyEvent) vkGetDeviceProcAddr(device, "vkDestroyEvent");
    vkLoader_vkGetEventStatus = (PFN_vkGetEventStatus) vkGetDeviceProcAddr(device, "vkGetEventStatus");
    vkLoader_vkSetEvent = (PFN_vkSetEvent) vkGetDeviceProcAddr(device, "vkSetEvent");
    vkLoader_vkResetEvent = (PFN_vkResetEvent) vkGetDeviceProcAddr(device, "vkResetEvent");
    vkLoader_vkCreateQueryPool = (PFN_vkCreateQueryPool) vkGetDeviceProcAddr(device, "vkCreateQueryPool");
    vkLoader_vkDestroyQueryPool = (PFN_vkDestroyQueryPool) vkGetDeviceProcAddr(device, "vkDestroyQueryPool");
    vkLoader_vkGetQueryPoolResults = (PFN_vkGetQueryPoolResults) vkGetDeviceProcAddr(device, "vkGetQueryPoolResults");
    vkLoader_vkCreateBuffer = (PFN_vkCreateBuffer) vkGetDeviceProcAddr(device, "vkCreateBuffer");
    vkLoader_vkDestroyBuffer = (PFN_vkDestroyBuffer) vkGetDeviceProcAddr(device, "vkDestroyBuffer");
    vkLoader_vkCreateBufferView = (PFN_vkCreateBufferView) vkGetDeviceProcAddr(device, "vkCreateBufferView");
    vkLoader_vkDestroyBufferView = (PFN_vkDestroyBufferView) vkGetDeviceProcAddr(device, "vkDestroyBufferView");
    vkLoader_vkCreateImage = (PFN_vkCreateImage) vkGetDeviceProcAddr(device, "vkCreateImage");
    vkLoader_vkDestroyImage = (PFN_vkDestroyImage) vkGetDeviceProcAddr(device, "vkDestroyImage");
    vkLoader_vkGetImageSubresourceLayout = (PFN_vkGetImageSubresourceLayout) vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout");
    vkLoader_vkCreateImageView = (PFN_vkCreateImageView) vkGetDeviceProcAddr(device, "vkCreateImageView");
    vkLoader_vkDestroyImageView = (PFN_vkDestroyImageView) vkGetDeviceProcAddr(device, "vkDestroyImageView");
    vkLoader_vkCreateShaderModule = (PFN_vkCreateShaderModule) vkGetDeviceProcAddr(device, "vkCreateShaderModule");
    vkLoader_vkDestroyShaderModule = (PFN_vkDestroyShaderModule) vkGetDeviceProcAddr(device, "vkDestroyShaderModule");
    vkLoader_vkCreatePipelineCache = (PFN_vkCreatePipelineCache) vkGetDeviceProcAddr(device, "vkCreatePipelineCache");
    vkLoader_vkDestroyPipelineCache = (PFN_vkDestroyPipelineCache) vkGetDeviceProcAddr(device, "vkDestroyPipelineCache");
    vkLoader_vkGetPipelineCacheData = (PFN_vkGetPipelineCacheData) vkGetDeviceProcAddr(device, "vkGetPipelineCacheData");
    vkLoader_vkMergePipelineCaches = (PFN_vkMergePipelineCaches) vkGetDeviceProcAddr(device, "vkMergePipelineCaches");
    vkLoader_vkCreateGraphicsPipelines = (PFN_vkCreateGraphicsPipelines) vkGetDeviceProcAddr(device, "vkCreateGraphicsPipelines");
    vkLoader_vkCreateComputePipelines = (PFN_vkCreateComputePipelines) vkGetDeviceProcAddr(device, "vkCreateComputePipelines");
    vkLoader_vkDestroyPipeline = (PFN_vkDestroyPipeline) vkGetDeviceProcAddr(device, "vkDestroyPipeline");
    vkLoader_vkCreatePipelineLayout = (PFN_vkCreatePipelineLayout) vkGetDeviceProcAddr(device, "vkCreatePipelineLayout");
    vkLoader_vkDestroyPipelineLayout = (PFN_vkDestroyPipelineLayout) vkGetDeviceProcAddr(device, "vkDestroyPipelineLayout");
    vkLoader_vkCreateSampler = (PFN_vkCreateSampler) vkGetDeviceProcAddr(device, "vkCreateSampler");
    vkLoader_vkDestroySampler = (PFN_vkDestroySampler) vkGetDeviceProcAddr(device, "vkDestroySampler");
    vkLoader_vkCreateDescriptorSetLayout = (PFN_vkCreateDescriptorSetLayout) vkGetDeviceProcAddr(device, "vkCreateDescriptorSetLayout");
    vkLoader_vkDestroyDescriptorSetLayout = (PFN_vkDestroyDescriptorSetLayout) vkGetDeviceProcAddr(device, "vkDestroyDescriptorSetLayout");
    vkLoader_vkCreateDescriptorPool = (PFN_vkCreateDescriptorPool) vkGetDeviceProcAddr(device, "vkCreateDescriptorPool");
    vkLoader_vkDestroyDescriptorPool = (PFN_vkDestroyDescriptorPool) vkGetDeviceProcAddr(device, "vkDestroyDescriptorPool");
    vkLoader_vkResetDescriptorPool = (PFN_vkResetDescriptorPool) vkGetDeviceProcAddr(device, "vkResetDescriptorPool");
    vkLoader_vkAllocateDescriptorSets = (PFN_vkAllocateDescriptorSets) vkGetDeviceProcAddr(device, "vkAllocateDescriptorSets");
    vkLoader_vkFreeDescriptorSets = (PFN_vkFreeDescriptorSets) vkGetDeviceProcAddr(device, "vkFreeDescriptorSets");
    vkLoader_vkUpdateDescriptorSets = (PFN_vkUpdateDescriptorSets) vkGetDeviceProcAddr(device, "vkUpdateDescriptorSets");
    vkLoader_vkCreateFramebuffer = (PFN_vkCreateFramebuffer) vkGetDeviceProcAddr(device, "vkCreateFramebuffer");
    vkLoader_vkDestroyFramebuffer = (PFN_vkDestroyFramebuffer) vkGetDeviceProcAddr(device, "vkDestroyFramebuffer");
    vkLoader_vkCreateRenderPass = (PFN_vkCreateRenderPass) vkGetDeviceProcAddr(device, "vkCreateRenderPass");
    vkLoader_vkDestroyRenderPass = (PFN_vkDestroyRenderPass) vkGetDeviceProcAddr(device, "vkDestroyRenderPass");
    vkLoader_vkGetRenderAreaGranularity = (PFN_vkGetRenderAreaGranularity) vkGetDeviceProcAddr(device, "vkGetRenderAreaGranularity");
    vkLoader_vkCreateCommandPool = (PFN_vkCreateCommandPool) vkGetDeviceProcAddr(device, "vkCreateCommandPool");
    vkLoader_vkDestroyCommandPool = (PFN_vkDestroyCommandPool) vkGetDeviceProcAddr(device, "vkDestroyCommandPool");
    vkLoader_vkResetCommandPool = (PFN_vkResetCommandPool) vkGetDeviceProcAddr(device, "vkResetCommandPool");
    vkLoader_vkAllocateCommandBuffers = (PFN_vkAllocateCommandBuffers) vkGetDeviceProcAddr(device, "vkAllocateCommandBuffers");
    vkLoader_vkFreeCommandBuffers = (PFN_vkFreeCommandBuffers) vkGetDeviceProcAddr(device, "vkFreeCommandBuffers");
    vkLoader_vkBeginCommandBuffer = (PFN_vkBeginCommandBuffer) vkGetDeviceProcAddr(device, "vkBeginCommandBuffer");
    vkLoader_vkEndCommandBuffer = (PFN_vkEndCommandBuffer) vkGetDeviceProcAddr(device, "vkEndCommandBuffer");
    vkLoader_vkResetCommandBuffer = (PFN_vkResetCommandBuffer) vkGetDeviceProcAddr(device, "vkResetCommandBuffer");
    vkLoader_vkCmdBindPipeline = (PFN_vkCmdBindPipeline) vkGetDeviceProcAddr(device, "vkCmdBindPipeline");
    vkLoader_vkCmdSetViewport = (PFN_vkCmdSetViewport) vkGetDeviceProcAddr(device, "vkCmdSetViewport");
    vkLoader_vkCmdSetScissor = (PFN_vkCmdSetScissor) vkGetDeviceProcAddr(device, "vkCmdSetScissor");
    vkLoader_vkCmdSetLineWidth = (PFN_vkCmdSetLineWidth) vkGetDeviceProcAddr(device, "vkCmdSetLineWidth");
    vkLoader_vkCmdSetDepthBias = (PFN_vkCmdSetDepthBias) vkGetDeviceProcAddr(device, "vkCmdSetDepthBias");
    vkLoader_vkCmdSetBlendConstants = (PFN_vkCmdSetBlendConstants) vkGetDeviceProcAddr(device, "vkCmdSetBlendConstants");
    vkLoader_vkCmdSetDepthBounds = (PFN_vkCmdSetDepthBounds) vkGetDeviceProcAddr(device, "vkCmdSetDepthBounds");
    vkLoader_vkCmdSetStencilCompareMask = (PFN_vkCmdSetStencilCompareMask) vkGetDeviceProcAddr(device, "vkCmdSetStencilCompareMask");
    vkLoader_vkCmdSetStencilWriteMask = (PFN_vkCmdSetStencilWriteMask) vkGetDeviceProcAddr(device, "vkCmdSetStencilWriteMask");
    vkLoader_vkCmdSetStencilReference = (PFN_vkCmdSetStencilReference) vkGetDeviceProcAddr(device, "vkCmdSetStencilReference");
    vkLoader_vkCmdBindDescriptorSets = (PFN_vkCmdBindDescriptorSets) vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets");
    vkLoader_vkCmdBindIndexBuffer = (PFN_vkCmdBindIndexBuffer) vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer");
    vkLoader_vkCmdBindVertexBuffers = (PFN_vkCmdBindVertexBuffers) vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers");
    vkLoader_vkCmdDraw = (PFN_vkCmdDraw) vkGetDeviceProcAddr(device, "vkCmdDraw");
    vkLoader_vkCmdDrawIndexed = (PFN_vkCmdDrawIndexed) vkGetDeviceProcAddr(device, "vkCmdDrawIndexed");
    vkLoader_vkCmdDrawIndirect = (PFN_vkCmdDrawIndirect) vkGetDeviceProcAddr(device, "vkCmdDrawIndirect");
    vkLoader_vkCmdDrawIndexedIndirect = (PFN_vkCmdDrawIndexedIndirect) vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirect");
    vkLoader_vkCmdDispatch = (PFN_vkCmdDispatch) vkGetDeviceProcAddr(device, "vkCmdDispatch");
    vkLoader_vkCmdDispatchIndirect = (PFN_vkCmdDispatchIndirect) vkGetDeviceProcAddr(device, "vkCmdDispatchIndirect");
    vkLoader_vkCmdCopyBuffer = (PFN_vkCmdCopyBuffer) vkGetDeviceProcAddr(device, "vkCmdCopyBuffer");
    vkLoader_vkCmdCopyImage = (PFN_vkCmdCopyImage) vkGetDeviceProcAddr(device, "vkCmdCopyImage");
    vkLoader_vkCmdBlitImage = (PFN_vkCmdBlitImage) vkGetDeviceProcAddr(device, "vkCmdBlitImage");
    vkLoader_vkCmdCopyBufferToImage = (PFN_vkCmdCopyBufferToImage) vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage");
    vkLoader_vkCmdCopyImageToBuffer = (PFN_vkCmdCopyImageToBuffer) vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer");
    vkLoader_vkCmdUpdateBuffer = (PFN_vkCmdUpdateBuffer) vkGetDeviceProcAddr(device, "vkCmdUpdateBuffer");
    vkLoader_vkCmdFillBuffer = (PFN_vkCmdFillBuffer) vkGetDeviceProcAddr(device, "vkCmdFillBuffer");
    vkLoader_vkCmdClearColorImage = (PFN_vkCmdClearColorImage) vkGetDeviceProcAddr(device, "vkCmdClearColorImage");
    vkLoader_vkCmdClearDepthStencilImage = (PFN_vkCmdClearDepthStencilImage) vkGetDeviceProcAddr(device, "vkCmdClearDepthStencilImage");
    vkLoader_vkCmdClearAttachments = (PFN_vkCmdClearAttachments) vkGetDeviceProcAddr(device, "vkCmdClearAttachments");
    vkLoader_vkCmdResolveImage = (PFN_vkCmdResolveImage) vkGetDeviceProcAddr(device, "vkCmdResolveImage");
    vkLoader_vkCmdSetEvent = (PFN_vkCmdSetEvent) vkGetDeviceProcAddr(device, "vkCmdSetEvent");
    vkLoader_vkCmdResetEvent = (PFN_vkCmdResetEvent) vkGetDeviceProcAddr(device, "vkCmdResetEvent");
    vkLoader_vkCmdWaitEvents = (PFN_vkCmdWaitEvents) vkGetDeviceProcAddr(device, "vkCmdWaitEvents");
    vkLoader_vkCmdPipelineBarrier = (PFN_vkCmdPipelineBarrier) vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier");
    vkLoader_vkCmdBeginQuery = (PFN_vkCmdBeginQuery) vkGetDeviceProcAddr(device, "vkCmdBeginQuery");
    vkLoader_vkCmdEndQuery = (PFN_vkCmdEndQuery) vkGetDeviceProcAddr(device, "vkCmdEndQuery");
    vkLoader_vkCmdResetQueryPool = (PFN_vkCmdResetQueryPool) vkGetDeviceProcAddr(device, "vkCmdResetQueryPool");
    vkLoader_vkCmdWriteTimestamp = (PFN_vkCmdWriteTimestamp) vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp");
    vkLoader_vkCmdCopyQueryPoolResults = (PFN_vkCmdCopyQueryPoolResults) vkGetDeviceProcAddr(device, "vkCmdCopyQueryPoolResults");
    vkLoader_vkCmdPushConstants = (PFN_vkCmdPushConstants) vkGetDeviceProcAddr(device, "vkCmdPushConstants");
    vkLoader_vkCmdBeginRenderPass = (PFN_vkCmdBeginRenderPass) vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass");
    vkLoader_vkCmdNextSubpass = (PFN_vkCmdNextSubpass) vkGetDeviceProcAddr(device, "vkCmdNextSubpass");
    vkLoader_vkCmdEndRenderPass = (PFN_vkCmdEndRenderPass) vkGetDeviceProcAddr(device, "vkCmdEndRenderPass");
    vkLoader_vkCmdExecuteCommands = (PFN_vkCmdExecuteCommands) vkGetDeviceProcAddr(device, "vkCmdExecuteCommands");
#ifdef VK_KHR_surface
    vkLoader_vkDestroySurfaceKHR = (PFN_vkDestroySurfaceKHR) vkGetDeviceProcAddr(device, "vkDestroySurfaceKHR");
    vkLoader_vkGetPhysicalDeviceSurfaceSupportKHR = (PFN_vkGetPhysicalDeviceSurfaceSupportKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfaceSupportKHR");
    vkLoader_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = (PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR");
    vkLoader_vkGetPhysicalDeviceSurfaceFormatsKHR = (PFN_vkGetPhysicalDeviceSurfaceFormatsKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfaceFormatsKHR");
    vkLoader_vkGetPhysicalDeviceSurfacePresentModesKHR = (PFN_vkGetPhysicalDeviceSurfacePresentModesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfacePresentModesKHR");
#endif
#ifdef VK_KHR_swapchain
    vkLoader_vkCreateSwapchainKHR = (PFN_vkCreateSwapchainKHR) vkGetDeviceProcAddr(device, "vkCreateSwapchainKHR");
    vkLoader_vkDestroySwapchainKHR = (PFN_vkDestroySwapchainKHR) vkGetDeviceProcAddr(device, "vkDestroySwapchainKHR");
    vkLoader_vkGetSwapchainImagesKHR = (PFN_vkGetSwapchainImagesKHR) vkGetDeviceProcAddr(device, "vkGetSwapchainImagesKHR");
    vkLoader_vkAcquireNextImageKHR = (PFN_vkAcquireNextImageKHR) vkGetDeviceProcAddr(device, "vkAcquireNextImageKHR");
    vkLoader_vkQueuePresentKHR = (PFN_vkQueuePresentKHR) vkGetDeviceProcAddr(device, "vkQueuePresentKHR");
#endif
#ifdef VK_KHR_display
    vkLoader_vkGetPhysicalDeviceDisplayPropertiesKHR = (PFN_vkGetPhysicalDeviceDisplayPropertiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceDisplayPropertiesKHR");
    vkLoader_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = (PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR");
    vkLoader_vkGetDisplayPlaneSupportedDisplaysKHR = (PFN_vkGetDisplayPlaneSupportedDisplaysKHR) vkGetDeviceProcAddr(device, "vkGetDisplayPlaneSupportedDisplaysKHR");
    vkLoader_vkGetDisplayModePropertiesKHR = (PFN_vkGetDisplayModePropertiesKHR) vkGetDeviceProcAddr(device, "vkGetDisplayModePropertiesKHR");
    vkLoader_vkCreateDisplayModeKHR = (PFN_vkCreateDisplayModeKHR) vkGetDeviceProcAddr(device, "vkCreateDisplayModeKHR");
    vkLoader_vkGetDisplayPlaneCapabilitiesKHR = (PFN_vkGetDisplayPlaneCapabilitiesKHR) vkGetDeviceProcAddr(device, "vkGetDisplayPlaneCapabilitiesKHR");
    vkLoader_vkCreateDisplayPlaneSurfaceKHR = (PFN_vkCreateDisplayPlaneSurfaceKHR) vkGetDeviceProcAddr(device, "vkCreateDisplayPlaneSurfaceKHR");
#endif
#ifdef VK_KHR_display_swapchain
    vkLoader_vkCreateSharedSwapchainsKHR = (PFN_vkCreateSharedSwapchainsKHR) vkGetDeviceProcAddr(device, "vkCreateSharedSwapchainsKHR");
#endif
#ifdef VK_KHR_xlib_surface
    vkLoader_vkCreateXlibSurfaceKHR = (PFN_vkCreateXlibSurfaceKHR) vkGetDeviceProcAddr(device, "vkCreateXlibSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceXlibPresentationSupportKHR = (PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceXlibPresentationSupportKHR");
#endif
#ifdef VK_KHR_xcb_surface
    vkLoader_vkCreateXcbSurfaceKHR = (PFN_vkCreateXcbSurfaceKHR) vkGetDeviceProcAddr(device, "vkCreateXcbSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceXcbPresentationSupportKHR = (PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceXcbPresentationSupportKHR");
#endif
#ifdef VK_KHR_wayland_surface
    vkLoader_vkCreateWaylandSurfaceKHR = (PFN_vkCreateWaylandSurfaceKHR) vkGetDeviceProcAddr(device, "vkCreateWaylandSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceWaylandPresentationSupportKHR = (PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceWaylandPresentationSupportKHR");
#endif
#ifdef VK_KHR_mir_surface
    vkLoader_vkCreateMirSurfaceKHR = (PFN_vkCreateMirSurfaceKHR) vkGetDeviceProcAddr(device, "vkCreateMirSurfaceKHR");
    vkLoader_vkGetPhysicalDeviceMirPresentationSupportKHR = (PFN_vkGetPhysicalDeviceMirPresentationSupportKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceMirPresentationSupportKHR");
#endif
#ifdef VK_KHR_android_surface
    vkLoader_vkCreateAndroidSurfaceKHR = (PFN_vkCreateAndroidSurfaceKHR) vkGetDeviceProcAddr(device, "vkCreateAndroidSurfaceKHR");
#endif
#ifdef VK_KHR_win32_surface
    vkLoader_vkCreateWin32SurfaceKHR = (PFN_vkCreateWin32SurfaceKHR) vkGetDeviceProcAddr(device, "vkCreateWin32SurfaceKHR");
    vkLoader_vkGetPhysicalDeviceWin32PresentationSupportKHR = (PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceWin32PresentationSupportKHR");
#endif
#ifdef VK_ANDROID_native_buffer
    vkLoader_vkGetSwapchainGrallocUsageANDROID = (PFN_vkGetSwapchainGrallocUsageANDROID) vkGetDeviceProcAddr(device, "vkGetSwapchainGrallocUsageANDROID");
    vkLoader_vkAcquireImageANDROID = (PFN_vkAcquireImageANDROID) vkGetDeviceProcAddr(device, "vkAcquireImageANDROID");
    vkLoader_vkQueueSignalReleaseImageANDROID = (PFN_vkQueueSignalReleaseImageANDROID) vkGetDeviceProcAddr(device, "vkQueueSignalReleaseImageANDROID");
#endif
#ifdef VK_EXT_debug_report
    vkLoader_vkCreateDebugReportCallbackEXT = (PFN_vkCreateDebugReportCallbackEXT) vkGetDeviceProcAddr(device, "vkCreateDebugReportCallbackEXT");
    vkLoader_vkDestroyDebugReportCallbackEXT = (PFN_vkDestroyDebugReportCallbackEXT) vkGetDeviceProcAddr(device, "vkDestroyDebugReportCallbackEXT");
    vkLoader_vkDebugReportMessageEXT = (PFN_vkDebugReportMessageEXT) vkGetDeviceProcAddr(device, "vkDebugReportMessageEXT");
#endif
#ifdef VK_EXT_debug_marker
    vkLoader_vkDebugMarkerSetObjectTagEXT = (PFN_vkDebugMarkerSetObjectTagEXT) vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectTagEXT");
    vkLoader_vkDebugMarkerSetObjectNameEXT = (PFN_vkDebugMarkerSetObjectNameEXT) vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectNameEXT");
    vkLoader_vkCmdDebugMarkerBeginEXT = (PFN_vkCmdDebugMarkerBeginEXT) vkGetDeviceProcAddr(device, "vkCmdDebugMarkerBeginEXT");
    vkLoader_vkCmdDebugMarkerEndEXT = (PFN_vkCmdDebugMarkerEndEXT) vkGetDeviceProcAddr(device, "vkCmdDebugMarkerEndEXT");
    vkLoader_vkCmdDebugMarkerInsertEXT = (PFN_vkCmdDebugMarkerInsertEXT) vkGetDeviceProcAddr(device, "vkCmdDebugMarkerInsertEXT");
#endif
#ifdef VK_AMD_draw_indirect_count
    vkLoader_vkCmdDrawIndirectCountAMD = (PFN_vkCmdDrawIndirectCountAMD) vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCountAMD");
    vkLoader_vkCmdDrawIndexedIndirectCountAMD = (PFN_vkCmdDrawIndexedIndirectCountAMD) vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCountAMD");
#endif
#ifdef VK_AMD_shader_info
    vkLoader_vkGetShaderInfoAMD = (PFN_vkGetShaderInfoAMD) vkGetDeviceProcAddr(device, "vkGetShaderInfoAMD");
#endif
#ifdef VK_NV_external_memory_capabilities
    vkLoader_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = (PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV");
#endif
#ifdef VK_NV_external_memory_win32
    vkLoader_vkGetMemoryWin32HandleNV = (PFN_vkGetMemoryWin32HandleNV) vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandleNV");
#endif
#ifdef VK_KHR_get_physical_device_properties2
    vkLoader_vkGetPhysicalDeviceFeatures2KHR = (PFN_vkGetPhysicalDeviceFeatures2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceFeatures2KHR");
    vkLoader_vkGetPhysicalDeviceProperties2KHR = (PFN_vkGetPhysicalDeviceProperties2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceProperties2KHR");
    vkLoader_vkGetPhysicalDeviceFormatProperties2KHR = (PFN_vkGetPhysicalDeviceFormatProperties2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceFormatProperties2KHR");
    vkLoader_vkGetPhysicalDeviceImageFormatProperties2KHR = (PFN_vkGetPhysicalDeviceImageFormatProperties2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceImageFormatProperties2KHR");
    vkLoader_vkGetPhysicalDeviceQueueFamilyProperties2KHR = (PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceQueueFamilyProperties2KHR");
    vkLoader_vkGetPhysicalDeviceMemoryProperties2KHR = (PFN_vkGetPhysicalDeviceMemoryProperties2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceMemoryProperties2KHR");
    vkLoader_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = (PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR");
#endif
#ifdef VK_KHX_device_group
    vkLoader_vkGetDeviceGroupPeerMemoryFeaturesKHX = (PFN_vkGetDeviceGroupPeerMemoryFeaturesKHX) vkGetDeviceProcAddr(device, "vkGetDeviceGroupPeerMemoryFeaturesKHX");
    vkLoader_vkCmdSetDeviceMaskKHX = (PFN_vkCmdSetDeviceMaskKHX) vkGetDeviceProcAddr(device, "vkCmdSetDeviceMaskKHX");
    vkLoader_vkCmdDispatchBaseKHX = (PFN_vkCmdDispatchBaseKHX) vkGetDeviceProcAddr(device, "vkCmdDispatchBaseKHX");
    vkLoader_vkGetDeviceGroupPresentCapabilitiesKHX = (PFN_vkGetDeviceGroupPresentCapabilitiesKHX) vkGetDeviceProcAddr(device, "vkGetDeviceGroupPresentCapabilitiesKHX");
    vkLoader_vkGetDeviceGroupSurfacePresentModesKHX = (PFN_vkGetDeviceGroupSurfacePresentModesKHX) vkGetDeviceProcAddr(device, "vkGetDeviceGroupSurfacePresentModesKHX");
    vkLoader_vkGetPhysicalDevicePresentRectanglesKHX = (PFN_vkGetPhysicalDevicePresentRectanglesKHX) vkGetDeviceProcAddr(device, "vkGetPhysicalDevicePresentRectanglesKHX");
    vkLoader_vkAcquireNextImage2KHX = (PFN_vkAcquireNextImage2KHX) vkGetDeviceProcAddr(device, "vkAcquireNextImage2KHX");
#endif
#ifdef VK_NN_vi_surface
    vkLoader_vkCreateViSurfaceNN = (PFN_vkCreateViSurfaceNN) vkGetDeviceProcAddr(device, "vkCreateViSurfaceNN");
#endif
#ifdef VK_KHR_maintenance1
    vkLoader_vkTrimCommandPoolKHR = (PFN_vkTrimCommandPoolKHR) vkGetDeviceProcAddr(device, "vkTrimCommandPoolKHR");
#endif
#ifdef VK_KHX_device_group_creation
    vkLoader_vkEnumeratePhysicalDeviceGroupsKHX = (PFN_vkEnumeratePhysicalDeviceGroupsKHX) vkGetDeviceProcAddr(device, "vkEnumeratePhysicalDeviceGroupsKHX");
#endif
#ifdef VK_KHR_external_memory_capabilities
    vkLoader_vkGetPhysicalDeviceExternalBufferPropertiesKHR = (PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceExternalBufferPropertiesKHR");
#endif
#ifdef VK_KHR_external_memory_win32
    vkLoader_vkGetMemoryWin32HandleKHR = (PFN_vkGetMemoryWin32HandleKHR) vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandleKHR");
    vkLoader_vkGetMemoryWin32HandlePropertiesKHR = (PFN_vkGetMemoryWin32HandlePropertiesKHR) vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandlePropertiesKHR");
#endif
#ifdef VK_KHR_external_memory_fd
    vkLoader_vkGetMemoryFdKHR = (PFN_vkGetMemoryFdKHR) vkGetDeviceProcAddr(device, "vkGetMemoryFdKHR");
    vkLoader_vkGetMemoryFdPropertiesKHR = (PFN_vkGetMemoryFdPropertiesKHR) vkGetDeviceProcAddr(device, "vkGetMemoryFdPropertiesKHR");
#endif
#ifdef VK_KHR_external_semaphore_capabilities
    vkLoader_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = (PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR");
#endif
#ifdef VK_KHR_external_semaphore_win32
    vkLoader_vkImportSemaphoreWin32HandleKHR = (PFN_vkImportSemaphoreWin32HandleKHR) vkGetDeviceProcAddr(device, "vkImportSemaphoreWin32HandleKHR");
    vkLoader_vkGetSemaphoreWin32HandleKHR = (PFN_vkGetSemaphoreWin32HandleKHR) vkGetDeviceProcAddr(device, "vkGetSemaphoreWin32HandleKHR");
#endif
#ifdef VK_KHR_external_semaphore_fd
    vkLoader_vkImportSemaphoreFdKHR = (PFN_vkImportSemaphoreFdKHR) vkGetDeviceProcAddr(device, "vkImportSemaphoreFdKHR");
    vkLoader_vkGetSemaphoreFdKHR = (PFN_vkGetSemaphoreFdKHR) vkGetDeviceProcAddr(device, "vkGetSemaphoreFdKHR");
#endif
#ifdef VK_KHR_push_descriptor
    vkLoader_vkCmdPushDescriptorSetKHR = (PFN_vkCmdPushDescriptorSetKHR) vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetKHR");
#endif
#ifdef VK_KHR_descriptor_update_template
    vkLoader_vkCreateDescriptorUpdateTemplateKHR = (PFN_vkCreateDescriptorUpdateTemplateKHR) vkGetDeviceProcAddr(device, "vkCreateDescriptorUpdateTemplateKHR");
    vkLoader_vkDestroyDescriptorUpdateTemplateKHR = (PFN_vkDestroyDescriptorUpdateTemplateKHR) vkGetDeviceProcAddr(device, "vkDestroyDescriptorUpdateTemplateKHR");
    vkLoader_vkUpdateDescriptorSetWithTemplateKHR = (PFN_vkUpdateDescriptorSetWithTemplateKHR) vkGetDeviceProcAddr(device, "vkUpdateDescriptorSetWithTemplateKHR");
    vkLoader_vkCmdPushDescriptorSetWithTemplateKHR = (PFN_vkCmdPushDescriptorSetWithTemplateKHR) vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplateKHR");
#endif
#ifdef VK_NVX_device_generated_commands
    vkLoader_vkCmdProcessCommandsNVX = (PFN_vkCmdProcessCommandsNVX) vkGetDeviceProcAddr(device, "vkCmdProcessCommandsNVX");
    vkLoader_vkCmdReserveSpaceForCommandsNVX = (PFN_vkCmdReserveSpaceForCommandsNVX) vkGetDeviceProcAddr(device, "vkCmdReserveSpaceForCommandsNVX");
    vkLoader_vkCreateIndirectCommandsLayoutNVX = (PFN_vkCreateIndirectCommandsLayoutNVX) vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutNVX");
    vkLoader_vkDestroyIndirectCommandsLayoutNVX = (PFN_vkDestroyIndirectCommandsLayoutNVX) vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutNVX");
    vkLoader_vkCreateObjectTableNVX = (PFN_vkCreateObjectTableNVX) vkGetDeviceProcAddr(device, "vkCreateObjectTableNVX");
    vkLoader_vkDestroyObjectTableNVX = (PFN_vkDestroyObjectTableNVX) vkGetDeviceProcAddr(device, "vkDestroyObjectTableNVX");
    vkLoader_vkRegisterObjectsNVX = (PFN_vkRegisterObjectsNVX) vkGetDeviceProcAddr(device, "vkRegisterObjectsNVX");
    vkLoader_vkUnregisterObjectsNVX = (PFN_vkUnregisterObjectsNVX) vkGetDeviceProcAddr(device, "vkUnregisterObjectsNVX");
    vkLoader_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX = (PFN_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX");
#endif
#ifdef VK_NV_clip_space_w_scaling
    vkLoader_vkCmdSetViewportWScalingNV = (PFN_vkCmdSetViewportWScalingNV) vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingNV");
#endif
#ifdef VK_EXT_direct_mode_display
    vkLoader_vkReleaseDisplayEXT = (PFN_vkReleaseDisplayEXT) vkGetDeviceProcAddr(device, "vkReleaseDisplayEXT");
#endif
#ifdef VK_EXT_acquire_xlib_display
    vkLoader_vkAcquireXlibDisplayEXT = (PFN_vkAcquireXlibDisplayEXT) vkGetDeviceProcAddr(device, "vkAcquireXlibDisplayEXT");
    vkLoader_vkGetRandROutputDisplayEXT = (PFN_vkGetRandROutputDisplayEXT) vkGetDeviceProcAddr(device, "vkGetRandROutputDisplayEXT");
#endif
#ifdef VK_EXT_display_surface_counter
    vkLoader_vkGetPhysicalDeviceSurfaceCapabilities2EXT = (PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfaceCapabilities2EXT");
#endif
#ifdef VK_EXT_display_control
    vkLoader_vkDisplayPowerControlEXT = (PFN_vkDisplayPowerControlEXT) vkGetDeviceProcAddr(device, "vkDisplayPowerControlEXT");
    vkLoader_vkRegisterDeviceEventEXT = (PFN_vkRegisterDeviceEventEXT) vkGetDeviceProcAddr(device, "vkRegisterDeviceEventEXT");
    vkLoader_vkRegisterDisplayEventEXT = (PFN_vkRegisterDisplayEventEXT) vkGetDeviceProcAddr(device, "vkRegisterDisplayEventEXT");
    vkLoader_vkGetSwapchainCounterEXT = (PFN_vkGetSwapchainCounterEXT) vkGetDeviceProcAddr(device, "vkGetSwapchainCounterEXT");
#endif
#ifdef VK_GOOGLE_display_timing
    vkLoader_vkGetRefreshCycleDurationGOOGLE = (PFN_vkGetRefreshCycleDurationGOOGLE) vkGetDeviceProcAddr(device, "vkGetRefreshCycleDurationGOOGLE");
    vkLoader_vkGetPastPresentationTimingGOOGLE = (PFN_vkGetPastPresentationTimingGOOGLE) vkGetDeviceProcAddr(device, "vkGetPastPresentationTimingGOOGLE");
#endif
#ifdef VK_EXT_discard_rectangles
    vkLoader_vkCmdSetDiscardRectangleEXT = (PFN_vkCmdSetDiscardRectangleEXT) vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEXT");
#endif
#ifdef VK_EXT_hdr_metadata
    vkLoader_vkSetHdrMetadataEXT = (PFN_vkSetHdrMetadataEXT) vkGetDeviceProcAddr(device, "vkSetHdrMetadataEXT");
#endif
#ifdef VK_KHR_shared_presentable_image
    vkLoader_vkGetSwapchainStatusKHR = (PFN_vkGetSwapchainStatusKHR) vkGetDeviceProcAddr(device, "vkGetSwapchainStatusKHR");
#endif
#ifdef VK_KHR_external_fence_capabilities
    vkLoader_vkGetPhysicalDeviceExternalFencePropertiesKHR = (PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceExternalFencePropertiesKHR");
#endif
#ifdef VK_KHR_external_fence_win32
    vkLoader_vkImportFenceWin32HandleKHR = (PFN_vkImportFenceWin32HandleKHR) vkGetDeviceProcAddr(device, "vkImportFenceWin32HandleKHR");
    vkLoader_vkGetFenceWin32HandleKHR = (PFN_vkGetFenceWin32HandleKHR) vkGetDeviceProcAddr(device, "vkGetFenceWin32HandleKHR");
#endif
#ifdef VK_KHR_external_fence_fd
    vkLoader_vkImportFenceFdKHR = (PFN_vkImportFenceFdKHR) vkGetDeviceProcAddr(device, "vkImportFenceFdKHR");
    vkLoader_vkGetFenceFdKHR = (PFN_vkGetFenceFdKHR) vkGetDeviceProcAddr(device, "vkGetFenceFdKHR");
#endif
#ifdef VK_KHR_get_surface_capabilities2
    vkLoader_vkGetPhysicalDeviceSurfaceCapabilities2KHR = (PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfaceCapabilities2KHR");
    vkLoader_vkGetPhysicalDeviceSurfaceFormats2KHR = (PFN_vkGetPhysicalDeviceSurfaceFormats2KHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfaceFormats2KHR");
#endif
#ifdef VK_MVK_ios_surface
    vkLoader_vkCreateIOSSurfaceMVK = (PFN_vkCreateIOSSurfaceMVK) vkGetDeviceProcAddr(device, "vkCreateIOSSurfaceMVK");
#endif
#ifdef VK_MVK_macos_surface
    vkLoader_vkCreateMacOSSurfaceMVK = (PFN_vkCreateMacOSSurfaceMVK) vkGetDeviceProcAddr(device, "vkCreateMacOSSurfaceMVK");
#endif
#ifdef VK_EXT_sample_locations
    vkLoader_vkCmdSetSampleLocationsEXT = (PFN_vkCmdSetSampleLocationsEXT) vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEXT");
    vkLoader_vkGetPhysicalDeviceMultisamplePropertiesEXT = (PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceMultisamplePropertiesEXT");
#endif
#ifdef VK_KHR_get_memory_requirements2
    vkLoader_vkGetImageMemoryRequirements2KHR = (PFN_vkGetImageMemoryRequirements2KHR) vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements2KHR");
    vkLoader_vkGetBufferMemoryRequirements2KHR = (PFN_vkGetBufferMemoryRequirements2KHR) vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements2KHR");
    vkLoader_vkGetImageSparseMemoryRequirements2KHR = (PFN_vkGetImageSparseMemoryRequirements2KHR) vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements2KHR");
#endif
#ifdef VK_KHR_sampler_ycbcr_conversion
    vkLoader_vkCreateSamplerYcbcrConversionKHR = (PFN_vkCreateSamplerYcbcrConversionKHR) vkGetDeviceProcAddr(device, "vkCreateSamplerYcbcrConversionKHR");
    vkLoader_vkDestroySamplerYcbcrConversionKHR = (PFN_vkDestroySamplerYcbcrConversionKHR) vkGetDeviceProcAddr(device, "vkDestroySamplerYcbcrConversionKHR");
#endif
#ifdef VK_KHR_bind_memory2
    vkLoader_vkBindBufferMemory2KHR = (PFN_vkBindBufferMemory2KHR) vkGetDeviceProcAddr(device, "vkBindBufferMemory2KHR");
    vkLoader_vkBindImageMemory2KHR = (PFN_vkBindImageMemory2KHR) vkGetDeviceProcAddr(device, "vkBindImageMemory2KHR");
#endif
#ifdef VK_EXT_validation_cache
    vkLoader_vkCreateValidationCacheEXT = (PFN_vkCreateValidationCacheEXT) vkGetDeviceProcAddr(device, "vkCreateValidationCacheEXT");
    vkLoader_vkDestroyValidationCacheEXT = (PFN_vkDestroyValidationCacheEXT) vkGetDeviceProcAddr(device, "vkDestroyValidationCacheEXT");
    vkLoader_vkMergeValidationCachesEXT = (PFN_vkMergeValidationCachesEXT) vkGetDeviceProcAddr(device, "vkMergeValidationCachesEXT");
    vkLoader_vkGetValidationCacheDataEXT = (PFN_vkGetValidationCacheDataEXT) vkGetDeviceProcAddr(device, "vkGetValidationCacheDataEXT");
#endif

	
	return VK_TRUE;
}

#ifdef __cplusplus
}
#endif

